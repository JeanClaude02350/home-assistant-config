homeassistant:
  name: Maison
  latitude: !secret homeassistant_latitude
  longitude: !secret homeassistant_longitude
  elevation: !secret homeassistant_elevation
  time_zone: Europe/Paris
  external_url: !secret homeassistant_external
  internal_url: !secret homeassistant_interne
  allowlist_external_dirs:
    - /config
  customize: !include customize.yaml
  
http:
  use_x_forwarded_for: true
  trusted_proxies:
    - !secret proxyserver

default_config:

#logger:
#  default: error
#  logs:
#    homeassistant.components.netatmo: debug

###################################################################
########    Configuration de la partie systeme     ###############
###################################################################

########    Configuration de la partie materiel    ###############

# Ajout du bluetooth
#ble_monitor:
#  hci_interface: 0
#  discovery: True

# Configuration NetAtmo à utiliser pour que Caméra Welcome remonte
netatmo:
  client_id: !secret netatmo_id
  client_secret: !secret netatmo_secret

# InfluxDB
influxdb:
  host: !secret ip_influxdb
  port: !secret port_influxdb
  database: !secret influxdb_database_ha
  username: !secret influxdb_username_ha
  password: !secret influxdb_password_ha
  max_retries: 3
  default_measurement: state

###################################################################
##########          Utilisation Browser Mod           #############
###################################################################

browser_mod: 
  prefix: "browser_"

###################################################################
##########            Les compte-à-rebours            #############
###################################################################

timer:
  test:
    duration: "00:00:10"
  coton40:
    duration: "03:00:00"
  synthetique30:
    duration: "02:40:00"
  rapide:
    duration: "00:30:00"

###################################################################
##########              Les lumieres                 ##############
###################################################################

light:

  - platform: group
    name: Sam
    entities:
      - light.salle_a_manger_01
      - light.salle_a_manger_02
      - light.salle_a_manger_03
      - light.salle_a_manger_04
      - light.salle_a_manger_05
      - light.salle_a_manger_06

  - platform: group
    name: Parents
    entities:
      - light.chambre_parentale_1
      - light.chambre_parentale_2
      - light.chambre_parentale_3
      - light.chambre_parentale_4

  - platform: group
    name: Maxence
    entities:
      - light.lumiere_03_maxence_01
      - light.lumiere_04_maxence_02

  - platform: group
    name: Chloe
    entities:
      - light.lumiere_05_chloe_01
      - light.lumiere_06_chloe_02

  - platform: group
    name: Garage
    entities:
      - light.lumiere_07_sous_sol
###################################################################
##########                   Switch                  ##############
###################################################################

switch:

# Pour arrêter ou démarrer la vidéo surveillance des Eufy Cam 2

  - platform: template
    switches:
      eufy_surveillance:
        friendly_name: "Cameras extérieures - Surveillance"
        icon_template: mdi:video
        value_template: "{{ is_state('sensor.eufy_status', 'Home') }}"
        turn_on:
          service: rest_command.eufy_guard_mode_home
        turn_off:
          service: rest_command.eufy_guard_mode_disarmed

  - platform: template
    switches:
      connexion_octoprint:
        friendly_name: "Connexion Octoprint"
        value_template: "{{ not is_state('sensor.octoprint_current_state', 'unknown') }}"
        turn_on:
          service: shell_command.octoprint_connect
        turn_off:
          service: shell_command.octoprint_disconnect

  - platform: command_line
    switches:
      preheat_bed_pla:
        command_on: "curl -s http://192.168.10.20/api/printer/bed -d '{\"command\":\"target\",\"target\":70}' -H 'Content-Type: application/json' -H 'X-Api-Key: 4CF3F18366A146278ABF97002BF8D82A'"
        command_off: "curl -s http://192.168.10.20/api/printer/bed -d '{\"command\":\"target\",\"target\":0}' -H 'Content-Type: application/json' -H 'X-Api-Key: 4CF3F18366A146278ABF97002BF8D82A'"

  - platform: command_line
    switches:
      preheat_tool_pla:
        command_on: "curl -s http://192.168.10.20/api/printer/tool -d '{\"command\":\"target\",\"targets\":{\"tool0\":210}}' -H 'Content-Type: application/json' -H 'X-Api-Key: 4CF3F18366A146278ABF97002BF8D82A'"
        command_off: "curl -s http://192.168.10.20/api/printer/tool -d '{\"command\":\"target\",\"targets\":{\"tool0\":0}}' -H 'Content-Type: application/json' -H 'X-Api-Key: 4CF3F18366A146278ABF97002BF8D82A'"

  - platform: command_line
    switches:
      preheat_bed_petg:
        command_on: "curl -s http://192.168.10.20/api/printer/bed -d '{\"command\":\"target\",\"target\":80}' -H 'Content-Type: application/json' -H 'X-Api-Key: 4CF3F18366A146278ABF97002BF8D82A'"
        command_off: "curl -s http://192.168.10.20/api/printer/bed -d '{\"command\":\"target\",\"target\":0}' -H 'Content-Type: application/json' -H 'X-Api-Key: 4CF3F18366A146278ABF97002BF8D82A'"

  - platform: command_line
    switches:
      preheat_tool_petg:
        command_on: "curl -s http://192.168.10.20/api/printer/tool -d '{\"command\":\"target\",\"targets\":{\"tool0\":240}}' -H 'Content-Type: application/json' -H 'X-Api-Key: 4CF3F18366A146278ABF97002BF8D82A'"
        command_off: "curl -s http://192.168.10.20/api/printer/tool -d '{\"command\":\"target\",\"targets\":{\"tool0\":0}}' -H 'Content-Type: application/json' -H 'X-Api-Key: 4CF3F18366A146278ABF97002BF8D82A'"

###################################################################
##########               Input Boolean                ##############
###################################################################

input_boolean:

# Machine à laver
  machine_en_cours:
    name: machine en cours
    icon: mdi:washing-machine

# Input boolean courrier
  courrier_present:
    name: courrier
    icon: mdi:mail

# Input boolean impression 3D
  nouvelle_impression:
    name: Nouvelle impression 3D
    icon: mdi:printer-3D

# Input boolean impression 3D
  arret_imprimante:
    name: Arret de l'imprimante
    icon: mdi:printer-3D
    
# Input boolean reset filament
  reset_filament:
    name: Reset Filament
    icon: mdi:ubisoft

# pour activer ou non les alertes au paradis
  alarme_activation:
    name: Activer alarme paradis
    icon: mdi:alarm-light

  notification_connexion_distante:
    name: notification mqtt distant
    icon: mdi:alarm-light

###################################################################
##########               Input Number                ##############
###################################################################

input_number:

  cout_m3_eau:
    name: Cout €/m3
    icon: mdi:currency-eur
    initial: 4
    min: 3.00
    max: 10.00
    unit_of_measurement: "€"
    mode: box
  
  ##############  Gestion des filaments dans lovelace    #################
  longueur_filament_totale:
   min: 0
   max: 330

  longueur_filament:
   min: 0
   max: 330
  
  filament_noir:
   min: 0
   max: 330

  filament_noir_restant:
   min: 0
   max: 330
   
  filament_bleu:
   min: 0
   max: 330

  filament_bleu_restant:
   min: 0
   max: 330

  filament_orange:
   min: 0
   max: 330
   
  filament_orange_restant:
   min: 0
   max: 330
   
  filament_gris:
   min: 0
   max: 330

  filament_gris_restant:
   min: 0
   max: 330

  filament_violet:
   min: 0
   max: 330

  filament_violet_restant:
   min: 0
   max: 330

  filament_blanc:
   min: 0
   max: 330

  filament_blanc_restant:
   min: 0
   max: 330

  filament_vert:
   min: 0
   max: 330

  filament_vert_restant:
   min: 0
   max: 330

###################################################################
##########               Les volets                  ##############
###################################################################

cover:

  - platform: mqtt
    name: "Volet cuisine"
    command_topic: "volet/cuisine"
    payload_open: "u"
    payload_close: "d"
    payload_stop: "s"
    state_open: "open"
    state_closed: "closed"

  - platform: mqtt
    name: "Volet salon"
    command_topic: "volet/salon"
    payload_open: "u"
    payload_close: "d"
    payload_stop: "s"
    state_open: "open"
    state_closed: "closed"

  - platform: mqtt
    name: "Volet parent"
    command_topic: "volet/chambre_parentale"
    payload_open: "u"
    payload_close: "d"
    payload_stop: "s"
    state_open: "open"
    state_closed: "closed"
  
  - platform: mqtt
    name: "Volet pitchouns"
    command_topic: "volet/chambre_pitchouns"
    payload_open: "u"
    payload_close: "d"
    payload_stop: "s"
    state_open: "open"
    state_closed: "closed"


###################################################################
##########              Les sensors                  ##############
###################################################################

sensor:

# Date au format français

  - platform: template
    sensors:
      date_longue: 
        friendly_name: 'Date'
        value_template: >
          {% set months = ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"] %}
          {% set month = months[now().strftime('%m') | int -1] %}
          {{ now().strftime('%d') + ' ' + month }}

# Pour la météo

      weather_temperature:
        friendly_name: "Weather Température"
        value_template: "{{ state_attr('weather.sillingy' , 'temperature') }}°"
      
      weather_icon:
        value_template: >-
          {% set weather_icon = states('weather.sillingy') 
            | replace('rainy', '☔️')
            | replace('partlycloudy', '⛅️')
            | replace('cloudy', '☁️')
            | replace('clear-night', '✨')
            | replace('fog', '🌀')
            | replace('hail', '🌧')
            | replace('lightning-rainy', '⛈')
            | replace('lightning', '⚡️') 
            | replace('pourring', '️☔️')
            | replace('snowy-rainy', '❄️️')
            | replace('snowy', '❄️')
            | replace('sunny', '☀️')
            | replace('windy-variant', '💨')
            | replace('windy', '💨')
            | replace('exceptional', '⚠️') %}     
          {% if not state_attr('weather.maison', 'temperature') == 'Indisponible' -%}
            {% if states('weather.beaucouze') == 'lightning-rainy' -%}
              ⛈
            {% else -%}
            {{ weather_icon }}
            {% endif -%}
          {% else -%}
          {% endif -%}

# Nombre de personne dans la maison

      compteur_home:
        friendly_name: Compteur Personnes à la maison         
        value_template: >-
          {% set pers = [
           states.person.thomas,
           states.person.delphine,           
           ] %}
          {{ pers | selectattr('state','eq','home') | list | count }}

# Pour la carte chauffage

      netatmo_temperature_courante:
        friendly_name: Température Entrée
        device_class: temperature
        unit_of_measurement: "°C"
        value_template: "{{ state_attr('climate.piece_de_vie', 'current_temperature') }}"

      netatmo_temperature_consigne:
        friendly_name: température consigne Entrée
        device_class: temperature
        unit_of_measurement: "°C"
        value_template: "{{ state_attr('climate.piece_de_vie', 'temperature') }}"

      netatmo_hvac_modes:
        friendly_name: Hvac modes Entrée
        value_template: "{{ state_attr('climate.piece_de_vie', 'hvac_modes') }}"

      netatmo_preset_mode:
        friendly_name: Preset mode Entrée
        value_template: "{{ state_attr('climate.piece_de_vie', 'preset_mode') }}"

# passage du temps onduleur en minute
      ups_battery_runtime_friendly:
        friendly_name: 'temps restant'
        value_template: >- 
          {% set time = (states.sensor.ups_battery_runtime.state | int) | int %}
          {% set minutes = ((time % 3600) / 60) | int %}
          {% set hours = ((time % 86400) / 3600) | int %}
          {% set days = (time / 86400) | int %}
    
          {%- if time < 60 -%}
            Less than a minute
            {%- else -%}
            {%- if days > 0 -%}
              {{ days }}d
            {%- endif -%}
            {%- if hours > 0 -%}
              {%- if days > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ hours }}h
            {%- endif -%}
            {%- if minutes > 0 -%}
              {%- if days > 0 or hours > 0 -%}
                {{ ' ' }}
              {%- endif -%}
              {{ minutes }}m
            {%- endif -%}
          {%- endif -%}

# Connaitre la saison
  - platform: season

# Fete du jour
  - platform: rest
    resource: https://fetedujour.fr/api/v2/nRVZvUKXwD6GKaBr/json
    name: Fete du jour
    value_template: "{{ value_json.name }}"

# Unifi controller

  - platform: unifigateway
    version: UDMP-unifiOS
    host: !secret unifi_host
    username: !secret unifi_username
    password: !secret unifi_password
    monitored_conditions:
      - www
      - wlan
      - lan
      - wan
      - alerts
      - firmware

  - platform: command_line
    command: 'python3 scripts/unifi_switch.py'
    command_timeout: 60
    name: unifi_switch
    value_template: '{{ value_json.Ports_used }}'
    unit_of_measurement: Clients
    scan_interval: 120
    json_attributes:
        - Model
        - Temp
        - Activity
        - CPU
        - RAM  
        - Uptime
        - Ports_used      
        - Ports_user
        - Ports_guest
        - Update

  - platform: template
    sensors:  
      unifi_switch_temp:
          value_template: >
              {{ states.sensor.unifi_switch.attributes.Temp }}
          friendly_name_template: Switch Temp
          unit_of_measurement: '℃'
      unifi_switch_activity:
          value_template: >
              {{ states.sensor.unifi_switch.attributes.Activity }}
          unit_of_measurement: 'Mbps'
          friendly_name_template: Switch       
      unifi_switch_ram:
          value_template: >
              {{ states.sensor.unifi_switch.attributes.RAM }}
          unit_of_measurement: '%'
          friendly_name_template: Switch RAM
      unifi_switch_cpu:
          value_template: >
              {{ states.sensor.unifi_switch.attributes.CPU }}
          unit_of_measurement: '%'
          friendly_name_template: Switch CPU   
      unifi_switch_model:
          value_template: >
              {{ states.sensor.unifi_switch.attributes.Model  }}
          friendly_name_template: Model
      unifi_switch_users:
          value_template: >
              {{ states.sensor.unifi_switch.attributes.Ports_user }}
          friendly_name_template: Users
      unifi_switch_guests:
          value_template: >
              {{ states.sensor.unifi_switch.attributes.Ports_guest }}
          friendly_name_template: Guest
      unifi_switch_update:
          value_template: >
              {% if is_state_attr('sensor.unifi_switch', 'Update' , false) %}
                No
              {% else %}
                Available
              {% endif %}
          friendly_name_template: Switch Updates

  - platform: command_line
    command: 'python3 scripts/unifi_ap.py'
    command_timeout: 60
    name: unifi_ap
    value_template: '{{ value_json.Clients }}'
    unit_of_measurement: Clients
    scan_interval: 120
    json_attributes:
        - Guests
        - Clients_wifi0
        - Clients_wifi1
        - Score  
        - CPU
        - RAM
        - Uptime
        - Score_wifi0
        - Score_wifi1
        - Activity
        - Update

  - platform: template
    sensors:  
      unifi_ap_guests:
          value_template: >
              {{ states.sensor.unifi_ap.attributes.Guests }}
          friendly_name_template: Unifi AP Guests    
      unifi_ap_activity:
          value_template: >
              {{ states.sensor.unifi_ap.attributes.Activity }}
          unit_of_measurement: 'Mbps'
          friendly_name_template: Unifi AP Activity      
      unifi_ap_ram:
          value_template: >
              {{ states.sensor.unifi_ap.attributes.RAM }}
          unit_of_measurement: '%'
          friendly_name_template: Unifi AP RAM    
      unifi_ap_cpu:
          value_template: >
              {{ states.sensor.unifi_ap.attributes.CPU }}
          unit_of_measurement: '%'
          friendly_name_template: Unifi AP CPU
      unifi_ap_score:
          value_template: >
              {{ states.sensor.unifi_ap.attributes.Score }}
          friendly_name_template: Unifi AP SCORE
      unifi_ap2_score:
          value_template: >
              {% if is_state_attr('sensor.unifi_ap', 'Score_wifi0' , -1) %}
                N/A
              {% else %}
                {{ states.sensor.unifi_ap.attributes.Score_wifi0 }}.
              {% endif %}
          friendly_name_template: Unifi AP 2.4gHz SCORE
      unifi_ap5_score:
          value_template: >
              {% if is_state_attr('sensor.unifi_ap_', 'Score_wifi1' , -1) %}
                N/A
              {% else %}
                {{ states.sensor.unifi_ap.attributes.Score_wifi1 }}.
              {% endif %}
          friendly_name_template: Unifi AP 5gHz SCORE
      unifi_ap_wifi_devices:
          value_template: >
              {{ states.sensor.unifi_ap.attributes.Clients_wifi0 }}
          friendly_name_template: Unifi AP 2.4gHz Clients
      unifi_ap5ghz_wifi_devices:
          value_template: >
              {{ states.sensor.unifi_ap.attributes.Clients_wifi1 }}
          friendly_name_template: Unifi AP 5gHz Clients
      unifi_ap_update:
          value_template: >
              {% if is_state_attr('sensor.unifi_ap', 'Update' , false) %}
                No
              {% else %}
                Available
              {% endif %}
          friendly_name_template: Unifi AP Updates


# Imprimante 3D

  - platform: mqtt
    name: "dispo imprimante"
    state_topic: "octoPrint/hass/Connected"

  - platform: mqtt
    name: "Longueur Filament"
    state_topic: "octoPrint/hass/printing"
    value_template: "{{ ((value_json.job.filament.length)|float * 0.001)|round(2) }}"
    json_attributes_topic: "octoPrint/hass/printing"
    json_attributes_template: "{{ value_json.job.filament | tojson }}"
    unit_of_measurement: "m"

  - platform: template
    sensors:
      quantite_filament_imprime:
        friendly_name: "quantité de filament total imprimé"
        unit_of_measurement: "m"
        value_template: >-
            {{ states.sensor.quantite_filament_imprime | float + states('input_number.longueur_filament')|float  }}

# Consommation d'eau via MQTT

  - platform: mqtt
    name: "consommation total"
    state_topic: "tele/eau/consommation"
    unit_of_measurement: "m³"
    value_template: "{{ value_json['total_m3']}}"
    icon: mdi:counter
  
  - platform: mqtt
    name: "compteur eau status"
    state_topic: "tele/eau/consommation"
    value_template: "{{ value_json['status']}}"

  - platform: template
    sensors:
      consommation_eau_quotidien_litre_precedent:
        friendly_name: "consommation historique"
        unit_of_measurement: "L"
        value_template: >-
            {{ states.sensor.eau_quotidien.attributes.last_period | float * 1000}}

  - platform: template
    sensors:
      consommation_eau_semaine_litre_precedent:
        friendly_name: "consommation historique"
        unit_of_measurement: "L"
        value_template: >-
            {{ states.sensor.eau_semaine.attributes.last_period | float * 1000}}

  - platform: template
    sensors:
      consommation_eau_mois_litre_precedent:
        friendly_name: "consommation historique"
        unit_of_measurement: "L"
        value_template: >-
            {{ states.sensor.eau_mois.attributes.last_period | float * 1000}}

  - platform: template
    sensors:
    ## consommation depuis le 12/02/2021
      consommation_eau:
        friendly_name: "consommation m3"
        value_template:  >-
            {{ (states("sensor.consommation_total")|float - 160.314)|round(3)}}
        unit_of_measurement: "m3"
        availability_template: >
          {% if is_state("sensor.consommation_total", "unknown") %}
            false
          {% else %}
            true
          {%- endif %}

  - platform: template
    sensors:
    ## consommation en L
      consommation_eau_heure_litre:
        friendly_name: "consommation"
        value_template:  >-
            {{ (states("sensor.eau_heure")|float * 1000)|round(2)}}
        unit_of_measurement: "L"
        availability_template: >-
            {% if is_state("sensor.eau_heure", "unknown") %}
              false
            {% else %}
              true
            {%- endif %}

  - platform: template
    sensors:
    ## consommation en L
      consommation_eau_quotidien_litre:
        friendly_name: "consommation"
        value_template:  >-
            {{ (states("sensor.eau_quotidien")|float * 1000)|round(2)}}
        unit_of_measurement: "L"
        availability_template: >-
            {% if is_state("sensor.eau_quotidien", "unknown") %}
              false
            {% else %}
              true
            {%- endif %}

  - platform: template
    sensors:
    ## consommation en L
      consommation_eau_semaine_litre:
        friendly_name: "consommation"
        value_template:  >-
            {{ (states("sensor.eau_semaine")|float * 1000)|round(2)}}
        unit_of_measurement: "L"
        availability_template: >-
            {% if is_state("sensor.eau_semaine", "unknown") %}
              false
            {% else %}
              true
            {%- endif %}

  - platform: template
    sensors:
    ## consommation en L
      consommation_eau_annee_litre:
        friendly_name: "consommation"
        value_template:  >-
            {{ (states("sensor.eau_annee")|float * 1000)|round(2)}}
        unit_of_measurement: "L"
        availability_template: >-
            {% if is_state("sensor.eau_annee", "unknown") %}
              false
            {% else %}
              true
            {%- endif %}

  - platform: template
    sensors:
    ## consommation en L
      consommation_eau_mois_litre:
        friendly_name: "consommation"
        value_template:  >-
            {{ (states("sensor.eau_mois")|float * 1000)|round(2)}}
        unit_of_measurement: "L"
        availability_template: >-
            {% if is_state("sensor.eau_mois", "unknown") %}
              false
            {% else %}
              true
            {%- endif %}

  - platform: template
    sensors:
    ## calcul cout de ma consommation d'eau
      eau_cout_jour:
        friendly_name: "Cout eau jour"
        value_template:  >-
            {{ (states("sensor.eau_quotidien")|float * states.input_number.cout_m3_eau.state|float)|round(2)}}
        unit_of_measurement: "€"
      eau_cout_semaine:
        friendly_name: "Cout eau semaine"
        value_template:  >-
             {{ (states("sensor.eau_semaine")|float * states.input_number.cout_m3_eau.state|float)|round(2)}}
      eau_cout_mois:
        friendly_name: "Cout eau mois"
        value_template:  >-
            {{ (states("sensor.eau_mois")|float * states.input_number.cout_m3_eau.state|float)|round(2)}}
        unit_of_measurement: "€"
      eau_cout_annee:
        friendly_name: "Cout eau annee"
        value_template:  >-
             {{ (states("sensor.eau_annee")|float * states.input_number.cout_m3_eau.state|float)|round(2)}}
        unit_of_measurement: "€"

# calcul du nombre de portes / fenetres ouvertes
  - platform: template
    sensors:
      number_of_doors_home:
        friendly_name: "Number of doors home"
        icon_template: hass:door-open
        value_template: >-
          {% set count = namespace(value=0) %}
          {% for entity_id in state_attr('group.all_doors_sensor_entities','entity_id') %}
            {% if (states(entity_id) == 'On') %}
              {% set count.value = count.value + 1 %}
            {% endif %}
          {% endfor %}
          {{ count.value }}

      number_of_smoke_home:
        friendly_name: "Number of smoke home"
        icon_template: mdi:smoke-detector
        value_template: >-
          {% set count = namespace(value=0) %}
          {% for entity_id in state_attr('group.all_smoke_sensor_entities','entity_id') %}
            {% if (states(entity_id) == 'On') %}
              {% set count.value = count.value + 1 %}
            {% endif %}
          {% endfor %}
          {{ count.value }}

# calcul du nombre de personnes présentes
  - platform: template
    sensors:
      number_of_persons_home:
        friendly_name: "Number of persons home"
        icon_template: mdi:account-circle
        value_template: >-
          {% set count = namespace(value=0) %}
          {% for entity_id in state_attr('group.all_person_entities','entity_id') %}
            {% if (states(entity_id) == 'home') %}
              {% set count.value = count.value + 1 %}
            {% endif %}
          {% endfor %}
          {{ count.value }}

# calcul du nombre de détecteurs de présence
      number_of_motion_sensors_on:
        friendly_name: "Number of Motion Sensors On"
        icon_template: mdi:run
        value_template: >-
          {% set count = namespace(value=0) %}
          {% for entity_id in state_attr('group.all_motion_sensor_entities','entity_id') %}
            {% if (states(entity_id) == 'on') %}
              {% set count.value = count.value + 1 %}
            {% endif %}
          {% endfor %}
          {{ count.value }}

  - platform: template
    sensors:
      pluie_semaine_derniere:
        friendly_name: "pluie semaine derniere"
        unit_of_measurement: "mm"
        value_template: >-
            {{ states.sensor.pluie_semaine.attributes.last_period }}

      pluie_mois_dernier:
        friendly_name: "pluie mois dernier"
        unit_of_measurement: "mm"
        value_template: >-
            {{ states.sensor.pluie_mois.attributes.last_period }}

      pluie_annee_derniere:
        friendly_name: "pluie annee derniere"
        unit_of_measurement: "mm"
        value_template: >-
            {{ states.sensor.pluie_annee.attributes.last_period }}

# Informations remontant de HASS


  - platform: filesize
    file_paths:
      - /config/home-assistant_v2.db

# Informations à propos de HACS
  - platform: command_line
    name: hacs_version
    scan_interval: 86400
    command: >
      grep -oP '"version": "\K[^"]+' custom_components/hacs/manifest.json

# CHECK DE LA MISE A JOUR DE VALETUDO
#  - platform: mqtt
#    name: version_valetudo
#    state_topic: "homeassistant/vacuum/valetudo_conchita/config"
#    value_template: "2021.03.0"
#    scan_interval: 21600

#  - platform: command_line
#    name: latest_valetudo
#    command: curl -s https://github.com/Hypfer/Valetudo/releases/latest | cut -d'"' -f2 | rev | cut -d'/' -f1 | rev
#    scan_interval: 21600

# Quelques statistiques sur HASS

  - platform: template
    sensors:

    #----- Nombre d'automations
      count_automations:
        friendly_name: 'automations'
        icon_template: mdi:robot
        value_template: "{{ states.automation | list | length }}"

    #----- Nombre de Scripts
      count_scripts:
        friendly_name: 'scripts'
        icon_template: mdi:script-text
        value_template: "{{ states.script| list | length }}"

    #----- Nombre de Device Trackers
      count_device_trackers:
        friendly_name: 'trackers'
        value_template: "{{ states.device_tracker | list | length }}"

    #----- Nombre de Binary Sensors
      count_binary_sensors:
        friendly_name: 'binary sensors'
        value_template: "{{ states.binary_sensor| list | length }}"

    #----- Nombre de Sensors
      count_sensors:
        friendly_name: 'sensors'
        icon_template: mdi:leak
        value_template: "{{ states.sensor | list | length }}"

    #----- Nombre de Switches
      count_switches:
        friendly_name: 'switch'
        icon_template: mdi:light-switch
        value_template: "{{ states.switch | list | length }}"

    #----- Nombre de Zones
      count_zones:
        friendly_name: 'zones'
        value_template: "{{ states.zone | list | length }}"

    #----- Nombre de Lights
      count_lights:
        friendly_name: 'lumieres'
        icon_template: mdi:lightbulb-group
        value_template: "{{ states.light | list | length }}"

  # Lumieres

  - platform: template
    sensors:
      all_lights_maison:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_lights_maison','entity_id')) | selectattr('state','eq','on') | list | count }}
      all_lights_salon:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_lights_salon','entity_id')) | selectattr('state','eq','on') | list | count }}
      all_lights_sam:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_lights_sam','entity_id')) | selectattr('state','eq','on') | list | count }}
      all_lights_cuisine:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_lights_cuisine','entity_id')) | selectattr('state','eq','on') | list | count }}
      all_lights_chloe:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_lights_chloe','entity_id')) | selectattr('state','eq','on') | list | count }}
      all_lights_maxence:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_lights_maxence','entity_id')) | selectattr('state','eq','on') | list | count }}
      all_lights_parents:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_lights_parents','entity_id')) | selectattr('state','eq','on') | list | count }}
      all_lights_entree:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_lights_entree','entity_id')) | selectattr('state','eq','on') | list | count }}
      all_lights_garage:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_lights_garage','entity_id')) | selectattr('state','eq','on') | list | count }}
  
  # compter toutes les lumières connectées de la maison

      all_lights_unavailable:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_lights_maison','entity_id')) | selectattr('state','eq','unavailable') | list | count }}
      all_lights:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_lights_maison','entity_id')) | list | count }}
      all_lights_available:
        value_template: >
          {% set t = states | selectattr('entity_id','in',state_attr('group.all_lights_maison','entity_id')) | selectattr('state','eq','unavailable') | list | count %}
          {% set y = states | selectattr('entity_id','in',state_attr('group.all_lights_maison','entity_id')) | list | count %}
          {{ (y - t) }}

  # compter tous les capteurs de température
      all_temp:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_temp_maison','entity_id')) | list | count }}
      all_temp_available:
        value_template: >
          {% set t = states | selectattr('entity_id','in',state_attr('group.all_temp_maison','entity_id')) | selectattr('state','eq','unavailable') | list | count %}
          {% set y = states | selectattr('entity_id','in',state_attr('group.all_temp_maison','entity_id')) | list | count %}
          {{ (y - t) }}

  # compter tous les capteurs de mouvement
      all_move:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_motion_sensor_entities','entity_id')) | list | count }}
      all_move_available:
        value_template: >
          {% set t = states | selectattr('entity_id','in',state_attr('group.all_motion_sensor_entities','entity_id')) | selectattr('state','eq','unavailable') | list | count %}
          {% set y = states | selectattr('entity_id','in',state_attr('group.all_motion_sensor_entities','entity_id')) | list | count %}
          {{ (y - t) }}

  # compter tous les capteurs d'ouverture / fermeture de porte
      all_door:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_doors_sensor_entities','entity_id')) | list | count }}
      all_door_available:
        value_template: >
          {% set t = states | selectattr('entity_id','in',state_attr('group.all_doors_sensor_entities','entity_id')) | selectattr('state','eq','unavailable') | list | count %}
          {% set y = states | selectattr('entity_id','in',state_attr('group.all_doors_sensor_entities','entity_id')) | list | count %}
          {{ (y - t) }}

  # pour les personnes

  - platform: template
    sensors:
      all_person_entities:
        value_template: >
          {{ states | selectattr('entity_id','in',state_attr('group.all_person_entities','entity_id')) | selectattr('state','eq','home') | list | count }}

  # NUC
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
      - type: network_in
        arg: eth0
      - type: network_out
        arg: eth0
      - type: ipv4_address
        arg: eth0


  - platform: uptime

  - platform: time_date
    display_options:
      ['time', 'date']

  # CREATION DE VARIABLE POUR LE THERMOSTAT
  - platform: template
    sensors:
      temperature_thermostat:
        friendly_name: 'Temperature thermostat'
        value_template: "{{ state_attr('climate.piece_de_vie', 'current_temperature') }}"
        attribute_templates:
          unit_of_measurement: "°C"

  - platform: template
    sensors:
      temperature_cible:
        friendly_name: 'Temperature cible'
        value_template: "{{ state_attr('climate.piece_de_vie', 'temperature') }}"
        attribute_templates:
          unit_of_measurement: "°C"

  - platform: template
    sensors:
      netatmo_hvac_action:
        friendly_name: 'chauffage'
        value_template: "{{ 0 if state_attr('climate.piece_de_vie', 'hvac_action') == 'idle' else 1}}"

  # POUR LES CAMERAS EUFY

  # POUR OBTENIR L'ETAT DES CMARERAS EUFY
  - platform: rest
    name: eufy_status
    resource: !secret eufy_guard_mode
    scan_interval: 10
    value_template: >-
      {% set v = value | replace('"', "")|int  %}
      {{ {0: "Away",
          1: "Home",
          2: "Schedule",
          3: "Custom1",
          4: "Custom2",
          5: "Custom3",
          47: "Geofence",
          63: "Disarmed"}[v] | default("Unknown state:" + (value|urlencode)) }}

  # QUELQUES REMONTEES D'INFOS DES CAMERAS EUFY
  - platform: rest
    name: camera_jardin_battery_level
    resource: !secret eufy_jardin_batterie
    scan_interval: 10
    device_class: battery
    unit_of_measurement: '%'

  - platform: rest
    name: camera_arriere_maison_battery_level
    resource: !secret eufy_arriere_batterie
    scan_interval: 10
    device_class: battery
    unit_of_measurement: '%'

  - platform: rest
    name: camera_arriere_maison_motion_detection
    resource: !secret eufy_arriere_mouvement
    scan_interval: 10

  - platform: rest
    name: camera_jardin_motion_detection
    resource: !secret eufy_jardin_mouvement
    scan_interval: 10

  # CAPTEURS SWITCHBOT

  # Thermometre
  - platform: rest
    name: temperature baie technique
    resource: !secret switchbot_temp_baie_url
    method: GET
    scan_interval: 300
    headers:
      Authorization: !secret switchbot_api
      Content-Type: 'application/json'
    value_template: '{{ value_json.body.temperature }}'
    json_attributes_path: "$.body"
    json_attributes:
      - humidity

  # Capteur de porte
  - platform: rest
    name: porte descente garage
    resource: !secret switchbot_porte_garage_url
    method: GET
    scan_interval: 300
    headers:
      Authorization: !secret switchbot_api
      Content-Type: 'application/json'
    value_template: '{{ value_json.body.openState }}'
    json_attributes_path: "$.body"
    json_attributes:
      - moveDetected

  # SURVEILLANCE SYSTEME MAISON DE FAMILLE
  - platform: template
    sensors:
      systeme:
        friendly_name: Surveillance systeme
        value_template: >-      
          {%- if states('sensor.rpi_diskusage')| float < 70 and
           states('sensor.rpi_cpu_temp')| float < 65 and
           states('sensor.disponibilite') =='online'
          -%}
           Tout est OK
          {% else -%}
           AVERTISSEMENT
          {% endif -%}

  # SURVEILLANCE MAISON DE FAMILLE
      surveillance:
        friendly_name: Surveillance
        value_template: >-      
          {%- if states('sensor.detecteur_porte_garage') =='True' and
           states('sensor.presence_salon') =='False'
          -%}
           Tout est OK
          {% else -%}
           AVERTISSEMENT
          {% endif -%}

  # ZIGBEE2MQTT DEPUIS MAISON DE FAMILLE

  - platform: mqtt
    name: "disponibilité"
    state_topic: "paradis/bridge/state"

  - platform: mqtt
    name: "temperature exterieur"
    state_topic: "paradis/capteur_exterieur/temperature"

  - platform: mqtt
    name: "humidite exterieur"
    state_topic: "paradis/capteur_exterieur/humidite"

  - platform: mqtt
    state_topic: "paradis/raspberrypi/cpuload"
    name: rpi cpu load
    unit_of_measurement: "%"

  - platform: mqtt
    state_topic: "paradis/raspberrypi/cputemp"
    name: rpi cpu temp
    unit_of_measurement: "°C"

  - platform: mqtt
    state_topic: "paradis/raspberrypi/diskusage"
    name: rpi diskusage
    unit_of_measurement: "%"

  - platform: mqtt
    state_topic: "paradis/raspberrypi/swap"
    name: rpi swap
    unit_of_measurement: "%"

  - platform: mqtt
    state_topic: "paradis/raspberrypi/memory"
    name: rpi memory
    unit_of_measurement: "%"

  - platform: mqtt
    state_topic: "paradis/raspberrypi/uptime_days"
    name: rpi uptime
    unit_of_measurement: "days"

  - platform: mqtt
    state_topic: "paradis/capteur_chambre_parents"
    name: "temperature parents"
    value_template: "{{ value_json['temperature']|round(1)}}"
    unit_of_measurement: "°C"

  - platform: mqtt
    state_topic: "paradis/capteur_chambre_parents"
    name: "humidite parents"
    value_template: "{{ value_json['humidity']|round(0)}}"
    unit_of_measurement: "%"

  - platform: mqtt
    state_topic: "paradis/capteur_chambre_enfants"
    name: "temperature enfants"
    value_template: "{{ value_json['temperature']|round(1)}}"
    unit_of_measurement: "°C"

  - platform: mqtt
    state_topic: "paradis/capteur_chambre_enfants"
    name: "humidite enfants"
    value_template: "{{ value_json['humidity']|round(0)}}"
    unit_of_measurement: "%"

  - platform: mqtt
    state_topic: "paradis/detecteur_porte_garage"
    name: "detecteur porte garage"
    value_template: "{{ value_json['contact']}}"

  - platform: mqtt
    state_topic: "paradis/capteur_piece_de_vie"
    name: "temperature salon"
    value_template: "{{ value_json['temperature']|round(1)}}"
    unit_of_measurement: "°C"

  - platform: mqtt
    state_topic: "paradis/capteur_piece_de_vie"
    name: "humidite salon"
    value_template: "{{ value_json['humidity']|round(0)}}"
    unit_of_measurement: "%"

  - platform: mqtt
    state_topic: "paradis/capteur_piece_de_vie"
    name: "batterie salon"
    value_template: "{{ value_json['battery']|round(0)}}"
    unit_of_measurement: "%"

  - platform: mqtt
    state_topic: "paradis/presence_piece_de_vie"
    name: "presence salon"
    value_template: "{{ value_json['occupancy']}}"

  - platform: mqtt
    state_topic: "paradis/presence_piece_de_vie"
    name: "batterie presence salon"
    value_template: "{{ value_json['battery']}}"


###################################################################
########                   BINARY SENSOR                  #########
###################################################################

binary_sensor:

  #TEST BONNE REPONSE EQUIPEMENT RESEAU
  - platform: ping
    host: !secret rasp_eau
    name: "RaspberryPi Eau"

  #TEST BONNE REPONSE RASPBERRYPI OCTOPRINT
  - platform: ping
    host: !secret rasp_octoprint
    name: "OCTOPRINT"

###################################################################
########                   UTILITY METER                  #########
###################################################################

utility_meter:
######  CALCUL CONSOMMATION EAU  ######
  eau_mois:
    source: sensor.consommation_total
    cycle: monthly

  eau_semaine:
    source: sensor.consommation_total
    cycle: weekly

  eau_quotidien:
    source: sensor.consommation_total
    cycle: daily

  eau_heure:
    source: sensor.consommation_total
    net_consumption: true
    cycle: hourly
  eau_annee:
    source: sensor.consommation_total
    net_consumption: true
    cycle: yearly

######   CALCUL PLUIE   ######
  pluie_semaine:
    source: sensor.netatmo_maison_piece_de_vie_pluviometre_rain_today
    net_consumption: true
    cycle: weekly

  pluie_mois:
    source: sensor.netatmo_maison_piece_de_vie_pluviometre_rain_today
    net_consumption: true
    cycle: monthly

  pluie_annee:
    source: sensor.netatmo_maison_piece_de_vie_pluviometre_rain_today
    net_consumption: true
    cycle: yearly

###################################################################
########                   CAMERAS                        #########
###################################################################

camera:

#caméra EUFY
  - platform: generic
    name: Jardin
    still_image_url: !secret eufy_jardin_images
  - platform: generic
    name: Arriere maison
    still_image_url: !secret eufy_arriere_images

#caméra Ezviz C1C
  - platform: ffmpeg
    name: C1C
    input: !secret ezviz_c1c

#caméra Octoprint - imprimante 3D
  - platform: mjpeg
    name: OctoPrint
    still_image_url: http://192.168.10.20/webcam/?action=snapshot
    mjpeg_url: http://192.168.10.20/webcam/?action=stream

#pour la carte du robot aspirateur
#pas encore opérationnel pour le D9

###################################################################
########                   CONTROLE                       #########
###################################################################

rest_command:

#pour désactiver la surveillance des caméras EUFY
  eufy_guard_mode_home:
    url: !secret eufy_surveillance_activation

#pour activer la surveillance des caméras EUFY
  eufy_guard_mode_disarmed:
    url: !secret eufy_surveillance_desactivation

###################################################################
########                   SCRIPT                         #########
###################################################################

shell_command:

# pour connecter / déconnecter l'imprimante à Octoprint
  octoprint_connect: "curl -s http://192.168.10.20/api/connection -d '{\"command\":\"connect\"}' -H 'Content-Type: application/json' -H 'X-Api-Key: 4CF3F18366A146278ABF97002BF8D82A'"
  octoprint_disconnect: "curl -s http://192.168.10.20/api/connection -d '{\"command\":\"disconnect\"}' -H 'Content-Type: application/json' -H 'X-Api-Key: 4CF3F18366A146278ABF97002BF8D82A'"

###################################################################
########   Management de Docker et des divers Conteneurs  #########
###################################################################

monitor_docker:
  - name: Docker
    containers:
      - appdaemon
      - vscode
      - portainer
      - traefik
      - grafana
      - zwavejs2mqtt
      - deconz
      - adguardhome
      - homeassistant
      - influxdb
      - mqtt
      - 'node-red'
      - 'unifi-controller'
      - iobroker
      - bitwarden
      - heimdall
    rename:
      appdaemon: AppDaemon
      deconz: DeCONZ
      adguardhome: AdGuard
      homeassistant_prod: Home Assistant
    monitored_conditions:
      - version
      - containers_running
      - containers_total
      - state
      - status
      - memory

###################################################################
##########   Interactionn vocale et Notification  ################
##################################################################

# Ajout de télégram pour les notifications - A VOIR POUR METTRE DANS FICHIER SPECIFIQUE
telegram_bot:
  - platform: polling
    api_key: !secret telegram_token
    allowed_chat_ids: 
    - !secret id_telegram_thomas
      
notify:
  - platform: telegram
    name: telegram
    chat_id: !secret id_telegram_thomas

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
panel_iframe: !include panel_iframe.yaml
scene: !include scenes.yaml