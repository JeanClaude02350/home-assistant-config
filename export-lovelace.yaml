button_card_templates:
  popup_light:
    show_icon: true
    show_name: true
    show_state: false
    show_label: false
    show_last_changed: true
    styles:
      img_cell:
        - background-color: rgba(70,70,70,0.5)
        - border-radius: 50%
        - place-self: start
        - width: 35px
        - height: 35px
        - margin-top: 2px
      icon:
        - place-self: start
        - width: 80%
      name:
        - color: lightgrey
        - top: 45%
        - left: 3%
        - font-size: 85%
        - font-weight: bold
        - position: absolute
      state:
        - color: lightgrey
        - top: 25%
        - left: 42%
        - font-size: 90%
        - position: absolute
      label:
        - color: darkgrey
        - top: 60%
        - left: 3%
        - font-size: 70%
        - position: absolute
      card:
        - height: 100px
        - padding: 3px
        - font-size: 100%
        - border-color: rgba(152, 167, 185, 0.2)
        - background-color: var(--my_color2)
        - border-style: outset
        - border-width: 1px
        - box-shadow: 1px 1px 5px 0px rgb(12, 12, 14)
      custom_fields:
        lum:
          - position: absolute
          - top: 75%
          - left: 50%
          - width: calc(80% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--button-card-light-color)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: var(--text_on)
          label:
            - color: var(--text_on)
      - value: 'off'
        color: grey
        styles:
          card:
            - animation: ball-scale2 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 2s ease
          name:
            - color: var(--text_off)
          label:
            - color: var(--text_off)
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  popup_capteur:
    show_icon: true
    show_name: true
    show_state: true
    show_label: false
    show_last_changed: true
    styles:
      img_cell:
        - background-color: var(--pastille_off)
        - border-radius: 50%
        - place-self: start
        - width: 35px
        - height: 35px
        - margin-top: 1px
      icon:
        - place-self: start
        - width: 80%
        - color: grey
      name:
        - color: grey
        - top: 5%
        - left: 35%
        - font-size: 90%
        - font-weight: bold
        - position: absolute
      state:
        - color: lightgrey
        - top: 25%
        - left: 35%
        - font-size: 90%
        - position: absolute
      label:
        - color: darkgrey
        - top: 75%
        - left: 8%
        - font-size: 80%
        - position: absolute
      card:
        - height: 75px
        - padding: 3px
        - padding: 3px
        - font-size: 100%
        - border-color: rgba(152, 167, 185, 0.2)
        - background-color: var(--my_color2)
        - border-style: outset
        - border-width: 1px
        - box-shadow: 1px 1px 5px 0px rgb(12, 12, 14)
    state:
      - value: 'off'
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
          card: null
      - value: 'on'
        styles:
          img_cell:
            - background-color: rgba(255,0,0,0.8)
          name:
            - color: red
            - font-weight: bold
          label:
            - color: red
            - font-weight: bold
          icon:
            - color: var(--icon_on)
          card:
            - border-color: red
      - value: 25
        operator: '>'
        styles:
          icon:
            - color: tomato
      - value: 19
        operator: <
        styles:
          icon:
            - color: dodgerblue
      - value: disarmed
        styles:
          icon:
            - color: var(--icon_off)
          state:
            - color: grey
      - value: armed_away
        styles:
          img_cell:
            - background-color: rgba(255,0,0,0.8)
          icon:
            - color: var(--icon_on)
          state:
            - color: red
            - font-weight: bold
      - value: arming
        styles:
          img_cell:
            - background-color: rgba(255,215,0,0.8)
          icon:
            - color: var(--icon_on)
          state:
            - color: gold
            - font-weight: bold
      - value: triggered
        styles:
          img_cell:
            - background-color: rgba(255,0,0,0.8)
          icon:
            - color: var(--icon_on)
            - animation: blink 1s ease infinite
          state:
            - color: red
            - font-weight: bold
    double_tap_action:
      action: more-info
    tap_action:
      action: more-info
  volets:
    show_entity_picture: true
    state:
      - value: open
        color: rgb(201, 244, 254)
        entity_picture: null
        spin: false
        styles:
          name:
            - color: rgb(0, 0, 0, 100%)
            - font: bold italic 15px/30px roboto
          card:
            - border-radius: 20px
            - padding: 10px 0px 8px 0px
            - background-color: rgb(0, 191, 255, 100%)
      - value: closed
        color: rgb(91, 96, 93)
        entity_picture: null
        spin: false
        styles:
          name:
            - font: bold 15px/30px roboto
    styles:
      card:
        - border-radius: 20px
        - padding: 10px 0px 8px 0px
        - margin: 0
        - font: 20px/35px Roboto
        - background: null
        - box-shadow: 0px 0px 5px rgb(0, 191, 255, 100%)
  widget_icon:
    tap_action:
      action: toggle
    color: var(--google-grey)
    show_icon: true
    show_name: false
    size: 20px
    styles:
      card:
        - box-shadow: none
        - padding: 0px
        - background-color: rgba(var(--color-theme),0.05)
        - border-radius: 14px
        - place-self: center
        - height: 42px
      grid:
        - grid-template-areas: '"i"'
      icon:
        - color: rgba(var(--color-theme),0.9)
  list_items:
    styles:
      card:
        - box-shadow: none
        - padding: 0px
      grid:
        - grid-template-areas: '"item1 item2 item3"'
        - grid-template-columns: 1fr 1fr 1fr
        - grid-template-rows: min-content
        - column-gap: 7px
  icon_info:
    color: var(--google-grey)
    show_icon: true
    show_name: true
    show_label: true
    size: 20px
    custom_fields:
      notification: |
        [[[
          if (entity.state =='unavailable'){
            return `<ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon>`
          }
        ]]]
    state:
      - styles:
          custom_fields:
            notification:
              - border-radius: 50%
              - position: absolute
              - left: 24px
              - top: '-2px'
              - height: 16px
              - width: 16px
              - border: 2px solid var(--card-background-color)
              - font-size: 12px
              - line-height: 14px
              - background-color: |
                  [[[
                    return "rgba(var(--color-red),1)";
                  ]]]
        value: unavailable
    styles:
      card:
        - border-radius: 21px 8px 8px 21px
        - box-shadow: none
        - padding: 0px
      grid:
        - grid-template-areas: '"i n" "i l"'
        - grid-template-columns: min-content auto
        - grid-template-rows: min-content min-content
      icon:
        - color: rgba(var(--color-theme),0.2)
      img_cell:
        - background-color: rgba(var(--color-theme),0.05)
        - border-radius: 50%
        - place-self: center
        - width: 42px
        - height: 42px
      name:
        - align-self: end
        - justify-self: start
        - font-weight: bold
        - font-size: 14px
        - margin-left: 12px
      label:
        - justify-self: start
        - align-self: start
        - font-weight: bolder
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 12px
      state:
        - justify-self: start
        - align-self: start
        - font-weight: bolder
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 12px
  vacuum:
    variables:
      entity: vacuum.default
      name: Default name
    styles:
      card:
        - border-radius: 20px
        - box-shadow: var(--box-shadow)
        - padding: 12px
      grid:
        - grid-template-areas: '"item1" "item2"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content  min-content
        - row-gap: 12px
    custom_fields:
      item1:
        card:
          template: list_items_only_one
          type: custom:button-card
          custom_fields:
            item1:
              card:
                entity: '[[[ return variables.entity ]]]'
                name: '[[[ return variables.name ]]]'
                tap_action:
                  action: more-info
                template:
                  - icon_info
                  - vacuum_info
                type: custom:button-card
      item2:
        card:
          template: list_items
          type: custom:button-card
          custom_fields:
            item1:
              card:
                icon: mdi:pause
                tap_action:
                  action: call-service
                  service: script.turn_on
                  service_data:
                    entity_id: script.aspiro_stop
                type: custom:button-card
                template: widget_icon
            item2:
              card:
                icon: mdi:battery-charging
                tap_action:
                  action: call-service
                  service: script.turn_on
                  service_data:
                    entity_id: script.aspiro_charge
                type: custom:button-card
                template: widget_icon
            item3:
              card:
                icon: mdi:map-marker-path
                tap_action:
                  action: call-service
                  service: persistent_notification.create
                  service_data:
                    message: 2eme ligne - 3eme Bouton
                    title: Debug Carte Aspirateur
                    notification_id: '{{ (range(1, 9999)|random) }}'
                type: custom:button-card
                template: widget_icon
  list_items_only_one:
    styles:
      card:
        - box-shadow: none
        - padding: 0px
      grid:
        - grid-template-areas: '"item1"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content
        - column-gap: 7px
  vacuum_info:
    tap_action:
      action: none
    icon: mdi:robot-vacuum
    label: |-
      [[[ 
        if (entity.state.toUpperCase() == 'DOCKED' && entity.attributes.battery_level == '100'){
            return 'Sur sa base';
        }
        else if (entity.attributes.status.toUpperCase() == 'CHARGING'){
            return 'En charge';
        }
        else if (entity.state.toUpperCase() == 'CLEANING'){
            return 'Nettoyage en cours';
        }
        else if (entity.attributes.status.toUpperCase() == 'RETURNING HOME'){
            return 'Retour vers sa base';
        }
        else if (entity.attributes.status.toUpperCase() == 'PAUSED'){
            return 'En pause';
        }
        else{
          return '❓ Inconnu ❓' ;
        }
      ]]]
    styles:
      icon:
        - color: |-
            [[[ 
              if (entity.state.toUpperCase() == 'DOCKED' && entity.attributes.battery_level == '100'){
                  return 'rgba(var(--couleur-gris),1)';
              }
              else if (entity.attributes.status.toUpperCase() == 'CHARGING'){
                  return  'rgba(var(--couleur-vert),1)';
              }
              else if (entity.state.toUpperCase() == 'CLEANING'){
                  return  'rgba(var(--couleur-jaune),1)';
              }
              else if (entity.attributes.status.toUpperCase() == 'RETURNING HOME'){
                  return  'rgba(var(--couleur-violet),1)';
              }
              else if (entity.attributes.status.toUpperCase() == 'PAUSED'){
                  return  'rgba(var(--couleur-bleu),1)';
              }
              else{
                  return 'rgba(var(--couleur-gris),1)';
              }
            ]]]
      img_cell:
        - background-color: |-
            [[[ 
              if (entity.state.toUpperCase() == 'DOCKED' && entity.attributes.battery_level == '100'){
                  return 'rgba(var(--couleur-gris),0.2)';
              }
              else if (entity.attributes.status.toUpperCase() == 'CHARGING'){
                  return  'rgba(var(--couleur-vert),0.2)';
              }
              else if (entity.state.toUpperCase() == 'CLEANING'){
                  return  'rgba(var(--couleur-jaune),0.2)';
              }
              else if (entity.attributes.status.toUpperCase() == 'RETURNING HOME'){
                  return  'rgba(var(--couleur-violet),0.2)';
              }
              else if (entity.attributes.status.toUpperCase() == 'PAUSED'){
                  return  'rgba(var(--couleur-bleu),0.2)';
              }
              else{
                  return 'rgba(var(--couleur-gris),0.2)';
              }
            ]]]
  card_1_line_4_actions_select_vacuum_fan_speed:
    variables:
      items_background_color: white
      item1_icon: mdi:numeric-1-circle
      item1_icon_scale: 1
      item1_background_entity: default
      item1_background_state: default
      item2_icon: mdi:numeric-2-circle
      item2_icon_scale: 1
      item2_background_entity: default
      item2_background_state: default
      item3_icon: mdi:numeric-3-circle
      item3_icon_scale: 1
      item3_background_entity: default
      item3_background_state: default
      item4_icon: mdi:numeric-4-circle
      item4_icon_scale: 1
      item4_background_entity: default
      item4_background_state: default
    styles:
      card:
        - border-radius: 20px
        - box-shadow: none
        - padding: 12px
        - background: transparent
      grid:
        - grid-template-areas: '"4items"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content  min-content
        - row-gap: 12px
    custom_fields:
      4items:
        card:
          template: list_items_1_line_4_actions
          type: custom:button-card
          custom_fields:
            item1:
              card:
                icon: '[[[ return variables.item1_icon ]]]'
                styles:
                  card:
                    - background-color: |
                        [[[
                          if (states[variables.item1_background_entity].state.toUpperCase() == variables.item1_background_state){
                              return variables.items_background_color;
                          }else{
                              return 'transparent';
                          }
                        ]]]
                  icon:
                    - transform: >-
                        [[[ return 'scale(' + variables.item1_icon_scale + ')'
                        ]]]
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  service_data:
                    entity_id: input_select.vacuum_aspiro_speed_set
                    option: Gentle
                type: custom:button-card
                template:
                  - widget_icon_action
            item2:
              card:
                icon: '[[[ return variables.item2_icon ]]]'
                styles:
                  card:
                    - background-color: |
                        [[[
                          if (states[variables.item2_background_entity].state.toUpperCase() == variables.item2_background_state){
                              return variables.items_background_color;
                          }else{
                              return 'transparent';
                          }
                        ]]]
                  icon:
                    - transform: >-
                        [[[ return 'scale(' + variables.item2_icon_scale + ')'
                        ]]]
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  service_data:
                    entity_id: input_select.vacuum_aspiro_speed_set
                    option: Silent
                type: custom:button-card
                template:
                  - widget_icon_action
            item3:
              card:
                icon: '[[[ return variables.item3_icon ]]]'
                styles:
                  card:
                    - background-color: |
                        [[[
                          if (states[variables.item3_background_entity].state.toUpperCase() == variables.item3_background_state){
                              return variables.items_background_color;
                          }else{
                              return 'transparent';
                          }
                        ]]]
                  icon:
                    - transform: >-
                        [[[ return 'scale(' + variables.item3_icon_scale + ')'
                        ]]]
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  service_data:
                    entity_id: input_select.vacuum_aspiro_speed_set
                    option: Standard
                type: custom:button-card
                template:
                  - widget_icon_action
            item4:
              card:
                icon: '[[[ return variables.item4_icon ]]]'
                styles:
                  card:
                    - background-color: |
                        [[[
                          if (states[variables.item4_background_entity].state.toUpperCase() == variables.item4_background_state){
                              return variables.items_background_color;
                          }else{
                              return 'transparent';
                          }
                        ]]]
                  icon:
                    - transform: >-
                        [[[ return 'scale(' + variables.item4_icon_scale + ')'
                        ]]]
                tap_action:
                  action: call-service
                  service: input_select.select_option
                  service_data:
                    entity_id: input_select.vacuum_aspiro_speed_set
                    option: Turbo
                type: custom:button-card
                template:
                  - widget_icon_action
  list_items_1_line_4_actions:
    styles:
      card:
        - box-shadow: none
        - padding: 0px
        - border-radius: 21px
        - pointer-events: none
        - background-color: rgba(var(--couleur-gris),0.2
        - justify-items: center
      grid:
        - grid-template-areas: '"item1 item2 item3 item4"'
        - grid-template-columns: 1fr 1fr 1fr 1fr
        - grid-template-rows: min-content
        - column-gap: 7px
        - justify-items: center
      img_cell:
        - justify-items: center
  widget_icon_action:
    show_icon: true
    show_name: false
    size: 20px
    styles:
      card:
        - box-shadow: none
        - padding: 0px
        - border-radius: 50%
        - place-self: center
        - height: 42px
        - width: 42px
        - pointer-events: auto
      grid:
        - grid-template-areas: '"i"'
      icon:
        - color: rgba(var(--couleur-theme),0.9)
  scene:
    template:
      - rouge_on
      - vert_off
    size: 20px
    show_label: true
    label: |
      [[[ return (entity.attributes.value )]]]
    styles:
      card:
        - border-radius: 20px
        - box-shadow: none
        - padding: 10px 0px 8px 0px
      grid:
        - grid-template-areas: '"i" "n" "l"'
      name:
        - margin-top: 10px
        - justify-self: center
        - font-weight: bold
        - font-size: 14px
      label:
        - justify-self: center
        - align-self: start
        - font-weight: bolder
        - font-size: 12px
        - filter: opacity(40%)
      icon:
        - color: rgba(51,51,51,0.2)
      img_cell:
        - background-color: rgba(51,51,51,0.05)
        - border-radius: 50%
        - place-self: center
        - width: 42px
        - height: 42px
  switch:
    template:
      - vert_on
      - rouge_off
    size: 20px
    show_label: true
    label: |
      [[[ return (entity.attributes.value )]]]
    styles:
      card:
        - border-radius: 20px
        - box-shadow: none
        - padding: 10px 0px 8px 0px
      grid:
        - grid-template-areas: '"i" "n" "l"'
      name:
        - margin-top: 10px
        - justify-self: center
        - font-weight: bold
        - font-size: 14px
      label:
        - justify-self: center
        - align-self: start
        - font-weight: bolder
        - font-size: 12px
        - filter: opacity(40%)
      icon:
        - color: rgba(51,51,51,0.2)
      img_cell:
        - background-color: rgba(51,51,51,0.05)
        - border-radius: 50%
        - place-self: center
        - width: 42px
        - height: 42px
  ouverture:
    template:
      - rouge_on
      - vert_off
    state:
      - label: Ouvert(e)
        id: 'on'
        value: 'on'
      - label: Fermé(e)
        id: 'off'
        value: 'off'
  ouverture_fenetre:
    template:
      - rouge_on
      - vert_off
    state:
      - icon: mdi:window-open-variant
        label: Fenêtre Ouverte
        id: rouge_on
        value: 'on'
      - icon: mdi:window-closed-variant
        label: Fenêtre Fermée
        id: vert_off
        value: 'off'
  vert_off:
    state:
      - id: vert_off
        styles:
          icon:
            - color: rgba(1, 200, 82, 1)
          img_cell:
            - background-color: rgba(1, 200, 82, 0.2)
        value: 'off'
  vert_on:
    state:
      - id: vert_on
        styles:
          icon:
            - color: rgba(1, 200, 82, 1)
          img_cell:
            - background-color: rgba(1, 200, 82, 0.2)
        value: 'on'
  rouge_on:
    state:
      - id: rouge_on
        styles:
          icon:
            - color: rgba(245, 68, 54, 1)
          img_cell:
            - background-color: rgba(245, 68, 54, 0.2)
        value: 'on'
  rouge_off:
    state:
      - id: rouge_off
        styles:
          icon:
            - color: rgba(245, 68, 54, 1)
          img_cell:
            - background-color: rgba(245, 68, 54, 0.2)
        value: 'off'
  icon_info_bg:
    color: rgba(187, 187, 187)
    show_icon: true
    show_name: true
    show_label: true
    size: 20px
    custom_fields:
      notification: |
        [[[
          if (entity.state =='unavailable'){
            return `<ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: '#EFEFEF';"></ha-icon>`
          }
        ]]]
    state:
      - styles:
          custom_fields:
            notification:
              - border-radius: 50%
              - position: absolute
              - left: 38px
              - top: 8px
              - height: 16px
              - width: 16px
              - border: 2px solid '#FAFAFA'
              - font-size: 12px
              - line-height: 14px
              - background-color: |
                  [[[
                    return "rgba(245, 68, 54, 1)";
                  ]]]
        value: unavailable
    styles:
      card:
        - border-radius: 20px
        - box-shadow: none
        - padding: 12px
      grid:
        - grid-template-areas: '"i n" "i l"'
        - grid-template-columns: min-content auto
        - grid-template-rows: min-content min-content
      icon:
        - color: rgba(255,255,255,0.2)
      img_cell:
        - background-color: rgba(255,255,255,0.05)
        - border-radius: 50%
        - place-self: center
        - width: 42px
        - height: 42px
      name:
        - align-self: end
        - justify-self: start
        - font-weight: bold
        - font-size: 14px
        - margin-left: 12px
      label:
        - justify-self: start
        - align-self: start
        - font-weight: bold
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 12px
      state:
        - justify-self: start
        - align-self: start
        - font-weight: bold
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 12px
  bouton_systeme:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    styles:
      img_cell:
        - border-radius: 50%
        - place-self: start
        - width: 37px
        - height: 37px
        - margin-left: 2%
        - margin-top: 0%
      icon:
        - color: black
        - top: 1%
        - left: 10%
        - width: 75%
      name:
        - color: black
        - top: 33%
        - left: 6%
        - font-size: 100%
        - font-weight: bold
        - position: absolute
      state:
        - top: 7%
        - left: 11%
        - position: absolute
      card:
        - height: 175px
        - text-shadow: 0px 0px 0px white
        - background-color: '#FFFFFF'
        - padding-left: 10px
        - border-radius: 20px
        - padding: 5%
        - font-size: 15px
        - transition: none
        - color: >
            [[[ return (entity.state === 'on' || entity.state === 'home') ?
            'rgba(0, 0, 0, 0.6)' : 'rgba(255, 255, 255, 0.3)'; ]]]
      custom_fields:
        circle:
          - top: 17%
          - left: 66.2%
          - width: 27%
          - position: absolute
          - letter-spacing: 0.03vw
        info1:
          - font-size: 12px
          - color: black
          - top: 57%
          - left: 3.2%
          - position: absolute
          - width: null
        info2:
          - font-size: 12px
          - color: black
          - top: 69%
          - left: 3.2%
          - width: null
          - position: absolute
        info3:
          - font-size: 12px
          - color: black
          - top: 81%
          - left: 3.2%
          - width: null
          - position: absolute
        info4:
          - font-size: 12px
          - color: black
          - top: 69%
          - left: 50.2%
          - width: null
          - position: absolute
        info5:
          - font-size: 12px
          - color: black
          - top: 81%
          - left: 50.2%
          - width: null
          - position: absolute
  bouton_titre:
    show_icon: false
    show_name: true
    show_state: false
    show_label: true
    styles:
      name:
        - top: 30%
        - margin-left: 5px
        - justify-self: center
        - font-size: 15px
        - font-weight: bold
        - font-style: italic
        - color: var(--text_title)
        - position: absolute
      label:
        - top: 30%
        - left: 65%
        - font-size: 13px
        - font-style: italic
        - color: var(--text_title)
        - position: absolute
      card:
        - height: 25px
title: Maison
views:
  - path: default_view
    title: Accueil
    visible:
      - user: b7dc10ea17f14fb8986cb0c130e3a556
      - user: 557caeb022be40f1bcf99af86a5fcf5b
    icon: mdi:home
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: custom:button-card
            entity: ''
            styles:
              card:
                - padding: 4%
                - font-size: 52px
                - border-radius: 20px
                - color: '#212121'
              grid:
                - grid-template-areas: '"date time"'
                - grid-template-columns: 2fr 1fr
                - grid-template-rows: 1fr
              custom_fields:
                time:
                  - justify-self: end
                date:
                  - justify-self: start
                  - font-size: 16px
                  - '--ha-card-box-shadow': none
            custom_fields:
              time: |
                [[[ return states['sensor.time'].state ]]]
              date:
                card:
                  type: markdown
                  content: >-
                    <center>  <b>{% if is_state('sensor.season', 'spring')%} 🌻
                    &nbsp; {{ states('sensor.date_longue') }}&nbsp; 🌻
                        {% elif is_state('sensor.season', 'summer')%} 🌴 &nbsp; {{ states('sensor.date_longue') }}&nbsp; 🌴
                        {% elif is_state('sensor.season', 'autumn')%} 🍂 &nbsp; {{ states('sensor.date_longue') }}&nbsp; 🍂 
                        {% elif is_state('sensor.season', 'winter')%} ❄️ &nbsp; {{ states('sensor.date_longue') }}&nbsp; ❄️ 
                        {% else %} Erreur Saison {% endif %} <center> </b>

                    <center> ☀️ &nbsp; Levé   {{
                    as_timestamp(states.sun.sun.attributes.next_rising) |
                    timestamp_custom(' %H:%M') | replace(" 0", "") }}  &nbsp;🌙 
                    &nbsp; Couché   {{
                    as_timestamp(states.sun.sun.attributes.next_setting) |
                    timestamp_custom(' %H:%M') | replace(" 0", "") }} <center> 

                    <center><i> 🎉 &nbsp; Nous fêtons la Saint
                    </i>{{states('sensor.fete_du_jour') }} <center>
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: person.thomas
                aspect_ratio: 1/1
                name: Person
                show_entity_picture: true
                show_name: false
                state:
                  - value: home
                    styles:
                      custom_fields:
                        entity_picture:
                          - border-color: '#77c66e'
                  - value: not_home
                    styles:
                      card:
                        - background-color: '#dedede'
                      custom_fields:
                        entity_picture:
                          - border-color: '#EF4F1A'
                  - value: Work
                    styles:
                      custom_fields:
                        entity_picture:
                          - border-color: deepskyblue
                styles:
                  entity_picture:
                    - border-radius: 50%
                    - top: 5%
                    - left: 5%
                    - width: 50%
                    - color: gray
                  card:
                    - background-color: white
                    - border-radius: 5%
                    - padding: 5%
                    - color: gray
                    - font-size: 12px
                  custom_fields:
                    icon:
                      - clip-path: circle()
                      - width: 80%
                      - border: 5px solid
                      - border-color: gray
                      - border-radius: 500px
                      - opacity: 1
                    status:
                      - top: 18%
                      - left: 63%
                      - position: absolute
                      - color: gray
                    wifi:
                      - top: 69%
                      - left: 12%
                      - position: absolute
                      - color: gray
                      - '--text-wifi-color-sensor': >-
                          [[[ if (states["sensor.thomas_ssid"].state == '<not
                          connected>') return "#aaaaaa"; ]]]
                    battery:
                      - top: 69%
                      - left: 65%
                      - position: absolute
                      - color: gray
                      - '--text-color-sensor': >-
                          [[[ if (states["sensor.thomas_battery_level"].state <
                          50) return "#EF4F1A"; ]]]
                    home:
                      - top: 83%
                      - left: 12%
                      - position: absolute
                      - font-size: 20px
                      - color: var(--secondary-text-color)
                    work:
                      - top: 83%
                      - left: 55%
                      - position: absolute
                      - font-size: 20px
                      - color: var(--secondary-text-color)
                custom_fields:
                  status: |
                    [[[
                      if (states['person.thomas'].state =='not_home') { 
                      return `<ha-icon icon="mdi:home-export-outline"
                        style="width: 20px; height: 20px; color: '#888888';">
                        </ha-icon><span> Absent</span>`;
                      } 
                      if (states['person.thomas'].state =='home') { 
                      return `<ha-icon 
                        icon="mdi:home"
                        style="width: 30px; height: 50px; color: 888888;">
                        </ha-icon><span> Présent</span>`;
                      } else {
                      return `<ha-icon 
                        icon="mdi:map-marker-radius"
                        style="width: 20px; height: 20px; color: 888888;">
                        </ha-icon><span> ${entity.state}</span>`;
                      }
                    ]]]
                  battery: |
                    [[[
                      if (states['sensor.thomas_battery_state'].state =='charging') { 
                        return `<ha-icon
                        icon="mdi:battery-charging"
                        style="width: 20px; height: 20px; color: #888888;">
                        </ha-icon> <span><span style="color: var(--text-color-sensor);">${states['sensor.thomas_battery_level'].state}%</span></span>`;
                      } else {
                        return `<ha-icon
                        icon="mdi:battery"
                        style="width: 20px; height: 20px; color: #888888;">
                        </ha-icon> <span><span style="color: var(--text-color-sensor);">${states['sensor.thomas_battery_level'].state}%</span></span>`;
                      }
                    ]]]
                  wifi: |
                    [[[
                      if (states['sensor.thomas_ssid'].state =='<not connected>') { 
                        return `<ha-icon
                        icon="mdi:wifi"
                        style="width: 20px; height: 20px; color: var(--text-wifi-color-sensor);">
                        </ha-icon> <span><span style="color: var(--text-wifi-color-sensor);">Disconnected</span></span>`; 
                      } else {
                        return `<ha-icon
                        icon="mdi:wifi"
                        style="width: 20px; height: 20px; color: #888888;">
                        </ha-icon> <span><span style="color: var(--text-color-sensor);">${states['sensor.thomas_ssid'].state}</span></span>`;
                      }
                    ]]]
                  home: |
                    [[[
                      return `<ha-icon
                        icon="mdi:home-import-outline"
                        style="; --mdc-icon-size: 14px; padding-left: 6px; padding-right: 5px; color: var(--primary-color);">
                        </ha-icon><span>${states['sensor.trajet_maison_thomas'].state}mins</span>`
                    ]]]
                  work: |
                    [[[
                      return `<ha-icon
                        icon="mdi:car"
                        style="; --mdc-icon-size: 14px; padding-left: 6px; padding-right: 5px; color: var(--primary-color);">
                        </ha-icon><span>${states['sensor.trajet_bureau_thomas'].state}mins</span>`
                    ]]]
              - type: custom:button-card
                entity: person.delphine
                aspect_ratio: 1/1
                name: Person
                show_entity_picture: true
                show_name: false
                state:
                  - value: home
                    styles:
                      custom_fields:
                        entity_picture:
                          - border-color: '#77c66e'
                  - value: not_home
                    styles:
                      card:
                        - background-color: '#dedede'
                      custom_fields:
                        entity_picture:
                          - border-color: '#EF4F1A'
                  - value: Work
                    styles:
                      custom_fields:
                        entity_picture:
                          - border-color: deepskyblue
                styles:
                  entity_picture:
                    - border-radius: 50%
                    - top: 5%
                    - left: 5%
                    - width: 50%
                    - color: gray
                  card:
                    - background-color: white
                    - border-radius: 5%
                    - padding: 5%
                    - color: gray
                    - font-size: 10px
                  custom_fields:
                    icon:
                      - clip-path: circle()
                      - width: 80%
                      - border: 5px solid
                      - border-color: gray
                      - border-radius: 500px
                      - opacity: 1
                    status:
                      - top: 18%
                      - left: 63%
                      - position: absolute
                      - color: gray
                    wifi:
                      - top: 69%
                      - left: 12%
                      - position: absolute
                      - color: gray
                      - '--text-wifi-color-sensor': >-
                          [[[ if (states["sensor.delphine_ssid"].state == '<not
                          connected>') return "#aaaaaa"; ]]]
                    battery:
                      - top: 69%
                      - left: 65%
                      - position: absolute
                      - color: gray
                      - '--text-color-sensor': >-
                          [[[ if (states["sensor.delphine_battery_level"].state
                          < 50) return "#EF4F1A"; ]]]
                    home:
                      - top: 83%
                      - left: 12%
                      - position: absolute
                      - font-size: 20px
                      - color: var(--secondary-text-color)
                    work:
                      - top: 83%
                      - left: 55%
                      - position: absolute
                      - font-size: 20px
                      - color: var(--secondary-text-color)
                custom_fields:
                  status: |
                    [[[
                      if (states['person.delphine'].state =='not_home') { 
                      return `<ha-icon icon="mdi:home-export-outline"
                        style="width: 20px; height: 20px; color: '#888888';">
                        </ha-icon><span> Absent</span>`;
                      } 
                      if (states['person.delphine'].state =='home') { 
                      return `<ha-icon 
                        icon="mdi:home"
                        style="width: 30px; height: 50px; color: 888888;">
                        </ha-icon><span> Présent</span>`;
                      } else {
                      return `<ha-icon 
                        icon="mdi:map-marker-radius"
                        style="width: 20px; height: 20px; color: 888888;">
                        </ha-icon><span> ${entity.state}</span>`;
                      }
                    ]]]
                  battery: |
                    [[[
                      if (states['sensor.delphine_battery_state'].state =='charging') { 
                        return `<ha-icon
                        icon="mdi:battery-charging"
                        style="width: 20px; height: 20px; color: #888888;">
                        </ha-icon> <span><span style="color: var(--text-color-sensor);">${states['sensor.delphine_battery_level'].state}%</span></span>`;
                      } else {
                        return `<ha-icon
                        icon="mdi:battery"
                        style="width: 20px; height: 20px; color: #888888;">
                        </ha-icon> <span><span style="color: var(--text-color-sensor);">${states['sensor.delphine_battery_level'].state}%</span></span>`;
                      }
                    ]]]
                  wifi: |
                    [[[
                      if (states['sensor.delphine_ssid'].state =='<not connected>') { 
                        return `<ha-icon
                        icon="mdi:wifi"
                        style="width: 20px; height: 20px; color: var(--text-wifi-color-sensor);">
                        </ha-icon> <span><span style="color: var(--text-wifi-color-sensor);">Disconnected</span></span>`; 
                      } else {
                        return `<ha-icon
                        icon="mdi:wifi"
                        style="width: 20px; height: 20px; color: #888888;">
                        </ha-icon> <span><span style="color: var(--text-color-sensor);">${states['sensor.delphine_ssid'].state}</span></span>`;
                      }
                    ]]]
          - type: custom:meteofrance-weather-card
            entity: weather.sillingy
            number_of_forecasts: '5'
            details: false
            current: true
            one_hour_forecast: false
            forecast: true
            alert_forecast: true
            detailEntity: sensor.netatmo_maison_piece_de_vie_jardin_temperature
            rainChanceEntity: sensor.sillingy_daily_precipitation
            uvEntity: sensor.sillingy_uv
            freezeChanceEntity: sensor.sillingy_freeze_chance
            snowChanceEntity: sensor.sillingy_snow_chance
            alertEntity: sensor.74_weather_alert
            cloudCoverEntity: sensor.sillingy_cloud_cover
      - type: vertical-stack
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: light.lampe_salon
                name: Salon
                icon: mdi:sofa
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return
                  (states['sensor.netatmo_temperature_courante'].state ) + "°C";
                  ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.netatmo_temperature_courante'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.netatmo_temperature_courante'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_salon'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_salon'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    volet:
                      - position: absolute
                      - top: 28%
                      - left: 75%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_temperature_courante'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_temperature_courante'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_temperature_courante'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_temperature_courante'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_salon'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.lampe_salon
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.lampe_salon
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  volet:
                    card:
                      type: custom:button-card
                      entity: cover.volet_salon
                      show_name: false
                      styles:
                        icon:
                          - width: 25%
                        card:
                          - background: transparent
                          - 'border-color:': transparent
                      tap_action:
                        action: toggle
                      hold_action:
                        action: fire-dom-event
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.netatmo_temperature_courante
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
                double_tap_action:
                  action: fire-dom-event
                  browser_mod:
                    command: popup
                    title: Popup example
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:button-card
                          style:
                            .: |
                              ha-card {
                                  --ha-card-background: none !important;
                                  box-shadow: none !important;
                                  font-family: Avenir
                          show_icon: false
                          show_name: false
                          show_state: false
                          show_label: true
                          label: |
                            [[[ return "Capteurs" ]]]
                          styles:
                            label:
                              - justify-self: center
                              - font-size: 15px
                              - font-weight: bold
                              - font-style: italic
                              - color: darkgrey
                            card:
                              - height: 20px
                        - type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              entity: sensor.netatmo_temperature_courante
                              template:
                                - popup_capteur
                            - type: custom:button-card
                              entity: binary_sensor.mouv_salle_a_manger
                              name: SàM
                              template:
                                - popup_capteur
                            - type: custom:button-card
                              entity: >-
                                binary_sensor.presence_garage_home_security_motion_detection
                              show_last_changed: true
                              show_state: true
                              name: Salon
                              template:
                                - popup_capteur
                        - type: custom:button-card
                          style:
                            .: |
                              ha-card {
                                  --ha-card-background: none !important;
                                  box-shadow: none !important;
                                  font-family: Avenir
                          show_icon: false
                          show_name: false
                          show_state: false
                          show_label: true
                          label: |
                            [[[ return "Lumières" ]]]
                          styles:
                            label:
                              - justify-self: center
                              - font-size: 15px
                              - font-weight: bold
                              - font-style: italic
                              - color: darkgrey
                            card:
                              - height: 20px
                        - type: grid
                          columns: 3
                          square: false
                          cards:
                            - type: custom:button-card
                              entity: light.lampe_salon
                              template:
                                - popup_light
                              name: Lampe TV
                              icon: null
                              custom_fields:
                                lum:
                                  card:
                                    type: conditional
                                    conditions:
                                      - entity: light.lampe_salon
                                        state: 'on'
                                    card:
                                      type: custom:my-slider
                                      entity: light.lampe_salon
                                      radius: 5px
                                      height: 15px
                                      mainSliderColor: >-
                                        var(--button-card-light-color-no-temperature)
                                      thumbHorizontalPadding: 0px
                                      thumbVerticalPadding: 0px
                                      thumbWidth: 2px
                                      minSet: 1
                            - type: custom:button-card
                              entity: light.spot_salon
                              name: Spot salon
                              template:
                                - popup_light
                              custom_fields:
                                lum:
                                  card:
                                    type: conditional
                                    conditions:
                                      - entity: light.spot_salon
                                        state: 'on'
                                    card:
                                      type: custom:my-slider
                                      entity: light.spot_salon
                                      radius: 5px
                                      height: 15px
                                      mainSliderColor: >-
                                        var(--button-card-light-color-no-temperature)
                                      thumbHorizontalPadding: 0px
                                      thumbVerticalPadding: 0px
                                      thumbWidth: 2px
                                      minSet: 1
                            - type: custom:button-card
                              entity: light.trilampe
                              name: null
                              template:
                                - popup_light
                              custom_fields:
                                lum:
                                  card:
                                    type: conditional
                                    conditions:
                                      - entity: light.trilampe
                                        state: 'on'
                                    card:
                                      type: custom:my-slider
                                      entity: light.trilampe
                                      radius: 5px
                                      height: 15px
                                      mainSliderColor: >-
                                        var(--button-card-light-color-no-temperature)
                                      thumbHorizontalPadding: 0px
                                      thumbVerticalPadding: 0px
                                      thumbWidth: 2px
                                      minSet: 1
                            - type: custom:button-card
                              entity: group.all_lights_parents
                              template:
                                - popup_light
                              name: test chambre
                              icon: null
                              custom_fields:
                                lum:
                                  card:
                                    type: conditional
                                    conditions:
                                      - entity: group.all_lights_parents
                                        state: 'on'
                                    card:
                                      type: custom:my-slider
                                      entity: group.all_lights_parents
                                      radius: 5px
                                      height: 15px
                                      mainSliderColor: >-
                                        var(--button-card-light-color-no-temperature)
                                      thumbHorizontalPadding: 0px
                                      thumbVerticalPadding: 0px
                                      thumbWidth: 2px
                                      minSet: 1
                            - type: custom:button-card
                              entity: light.sam
                              template:
                                - popup_light
                              name: Lustre SàM
                              icon: null
                              custom_fields:
                                lum:
                                  card:
                                    type: conditional
                                    conditions:
                                      - entity: light.sam
                                        state: 'on'
                                    card:
                                      type: custom:my-slider
                                      entity: light.sam
                                      radius: 5px
                                      height: 15px
                                      mainSliderColor: >-
                                        var(--button-card-light-color-no-temperature)
                                      thumbHorizontalPadding: 0px
                                      thumbVerticalPadding: 0px
                                      thumbWidth: 2px
                                      minSet: 1
                            - type: custom:button-card
                              entity: light.chambre_parentale_1
                              template:
                                - popup_light
                              name: null
                              icon: null
                              custom_fields:
                                lum:
                                  card:
                                    type: conditional
                                    conditions:
                                      - entity: light.chambre_parentale_1
                                        state: 'on'
                                    card:
                                      type: custom:my-slider
                                      entity: light.chambre_parentale_1
                                      radius: 5px
                                      height: 15px
                                      mainSliderColor: >-
                                        var(--button-card-light-color-no-temperature)
                                      thumbHorizontalPadding: 0px
                                      thumbVerticalPadding: 0px
                                      thumbWidth: 2px
                                      minSet: 1
              - type: custom:button-card
                entity: light.sam
                name: SàM
                icon: mdi:table
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return
                  (states['sensor.netatmo_maison_piece_de_vie_temperature'].state
                  ) + "°C"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_sam'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_sam'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return Math.floor(states['sensor.all_lights_sam'].state
                    ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.sam
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.sam
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.netatmo_maison_piece_de_vie_temperature
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: light.lumiere_01_spot_entree
                name: Entrée
                icon: mdi:door
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return
                  (states['sensor.netatmo_maison_piece_de_vie_temperature'].state
                  ) + "°C"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_entree'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_entree'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_entree'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: group.all_lights_entree
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.spot_entree
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.netatmo_maison_piece_de_vie_temperature
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: light.cuisine
                name: Cuisine
                icon: mdi:food
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return (states['sensor.temperature_cuisine'].state ) +
                  "°C"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.temperature_cuisine'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_cuisine'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_cuisine'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_cuisine'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    volet:
                      - position: absolute
                      - top: 28%
                      - left: 75%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_cuisine'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_cuisine'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_cuisine'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_cuisine'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_cuisine'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.cuisine
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.cuisine
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  volet:
                    card:
                      type: custom:button-card
                      entity: cover.volet_cuisine
                      show_name: false
                      styles:
                        icon:
                          - width: 25%
                        card:
                          - background: transparent
                          - 'border-color:': transparent
                      tap_action:
                        action: toggle
                      hold_action:
                        action: fire-dom-event
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_cuisine
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: light.lampe_salon
                name: Salle de jeux
                icon: mdi:gamepad-variant
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return (states['sensor.temperature_salle_de_jeux'].state )
                  + "°C"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.temperature_salle_de_jeux'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_salle_de_jeux'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_salon'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_salon'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_salle_de_jeux'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_salle_de_jeux'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_salle_de_jeux'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_salle_de_jeux'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_salon'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.lampe_salon
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.lampe_salon
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: binary_sensor.mouvement_01_salle_de_jeux_occupancy
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_salle_de_jeux
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: light.lampe_salon
                name: Bureau
                icon: mdi:desktop-mac-dashboard
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return (states['sensor.temperature_bureau'].state ) +
                  "°C"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 70%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.temperature_bureau'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_bureau'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_salon'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_salon'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_bureau'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_bureau'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_bureau'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_bureau'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_salon'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.lampe_salon
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.lampe_salon
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_bureau
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: light.wc
                name: WC
                icon: mdi:toilet
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return
                  (states['sensor.netatmo_maison_piece_de_vie_temperature'].state
                  ) + "°C"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 70%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_salon'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_salon'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    volet:
                      - position: absolute
                      - top: 28%
                      - left: 75%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_salon'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.lampe_salon
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.lampe_salon
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.netatmo_maison_piece_de_vie_temperature
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: light.sdb
                name: Salle de bain
                icon: mdi:bathtub
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return
                  (states['sensor.netatmo_maison_piece_de_vie_temperature'].state
                  ) + "°C"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 70%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_sam'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_sam'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return Math.floor(states['sensor.all_lights_sam'].state
                    ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.sam
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.sam
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.netatmo_maison_piece_de_vie_temperature
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: group.all_lights_parents
                name: Parents
                icon: mdi:bed
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return
                  (states['sensor.netatmo_maison_piece_de_vie_chambre_parentale_temperature'].state
                  ) + "°"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 70%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.netatmo_maison_piece_de_vie_chambre_parentale_temperature'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.netatmo_maison_piece_de_vie_chambre_parentale_temperature'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_parents'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_parents'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    volet:
                      - position: absolute
                      - top: 28%
                      - left: 75%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_chambre_parentale_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_chambre_parentale_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_chambre_parentale_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_chambre_parentale_temperature'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_parents'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: group.all_lights_parents
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.parents
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  volet:
                    card:
                      type: custom:button-card
                      entity: cover.volet_parent
                      show_name: false
                      styles:
                        icon:
                          - width: 25%
                        card:
                          - background: transparent
                          - 'border-color:': transparent
                      tap_action:
                        action: toggle
                      hold_action:
                        action: fire-dom-event
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: >-
                            sensor.netatmo_maison_piece_de_vie_chambre_parentale_temperature
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: light.lampe_salon
                name: Salle d'eau
                icon: mdi:shower-head
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return (states['sensor.temperature_bureau'].state ) + "°";
                  ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 80%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.temperature_bureau'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_bureau'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_salon'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_salon'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_bureau'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_bureau'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_bureau'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_bureau'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_salon'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.lampe_salon
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.lampe_salon
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_bureau
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: light.maxence
                name: Maxence
                icon: mdi:human-child
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return (states['sensor.temperature_chambre_maxence'].state
                  ) + "°C"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.temperature_chambre_maxence'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_chambre_maxence'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_maxence'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_maxence'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    volet:
                      - position: absolute
                      - top: 28%
                      - left: 75%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_chambre_maxence'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_chambre_maxence'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_chambre_maxence'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_chambre_maxence'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_maxence'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.maxence
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.maxence
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  volet:
                    card:
                      type: custom:button-card
                      entity: cover.volet_pitchouns
                      show_name: false
                      styles:
                        icon:
                          - width: 25%
                        card:
                          - background: transparent
                          - 'border-color:': transparent
                      tap_action:
                        action: toggle
                      hold_action:
                        action: fire-dom-event
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_chambre_maxence
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: light.chloe
                name: Chloé
                icon: mdi:human-child
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return
                  (states['sensor.netatmo_maison_piece_de_vie_temperature'].state
                  ) + "°"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_chloe'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_chloe'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    volet:
                      - position: absolute
                      - top: 28%
                      - left: 75%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_chloe'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.chloe
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.chloe
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  volet:
                    card:
                      type: custom:button-card
                      entity: cover.volet_pitchouns
                      show_name: false
                      styles:
                        icon:
                          - width: 25%
                        card:
                          - background: transparent
                          - 'border-color:': transparent
                      tap_action:
                        action: toggle
                      hold_action:
                        action: fire-dom-event
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.netatmo_maison_piece_de_vie_temperature
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: light.garage
                name: Garage
                icon: mdi:garage
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return
                  (states['sensor.presence_garage_air_temperature'].state ) +
                  "°C"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.presence_garage_air_temperature'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.presence_garage_air_temperature'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_maxence'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_maxence'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.presence_garage_air_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.presence_garage_air_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.presence_garage_air_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.presence_garage_air_temperature'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_maxence'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.maxence
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.maxence
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.presence_garage_air_temperature
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: light.chloe
                name: Cave à vin
                icon: mdi:bottle-wine
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return (states['sensor.temperature_cave'].state ) + "°";
                  ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.temperature_cave'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_cave'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 120%
                    - position: absolute
                  card:
                    - height: 100px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    notification:
                      - background-color: |
                          [[[
                            if (states['sensor.all_lights_chloe'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'rgba(128,128,128,0.0)';
                          ]]]
                      - color: |
                          [[[
                            if (states['sensor.all_lights_chloe'].state == 0)
                              return 'rgba(0,191,205,0)';
                           return 'var(--text_on)';
                          ]]]
                      - border-radius: 50%
                      - position: absolute
                      - left: 2%
                      - top: 1%
                      - height: 16%
                      - width: 15%
                      - font-size: 90%
                      - line-height: 137%
                      - font-weight: bold
                    lum:
                      - position: absolute
                      - top: '-01%'
                      - left: 55%
                      - width: calc(80% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic:
                      - position: absolute
                      - top: 28%
                      - left: 65%
                      - width: calc(60% + 1px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 120%
                      - left: 50%
                      - width: calc(100% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_cave'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_cave'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_cave'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_cave'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  notification: >
                    [[[ return
                    Math.floor(states['sensor.all_lights_chloe'].state ) ]]]
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.chloe
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.chloe
                        radius: 5px
                        height: 8px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          color_style: blank-card
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.presence_garage_home_security_motion_detection
                          show_name: false
                          styles:
                            icon:
                              - width: 60%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'off'
                              styles:
                                icon:
                                  - color: transparent
                          tap_action:
                            action: more-info
                      columns: 3
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_cave
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
      - type: vertical-stack
        cards:
          - type: picture-elements
            image: /local/netatmo/background.png
            elements:
              - type: image
                entity: climate.piece_de_vie
                title: mode absent
                tap_action:
                  action: call-service
                  service: Script.netatmo_mode_absent
                hold_action:
                  action: more-info
                image: /local/netatmo/absent.png
                style:
                  top: 37%
                  left: 53.6%
                  width: 10%
              - type: image
                entity: climate.piece_de_vie
                title: mode planifié
                tap_action:
                  action: call-service
                  service: Script.netatmo_mode_schedule
                hold_action:
                  action: more-info
                image: /local/netatmo/chauffe.png
                style:
                  top: 37%
                  left: 69.6%
                  width: 12%
              - type: image
                entity: climate.piece_de_vie
                title: mode off
                tap_action:
                  action: call-service
                  service: Script.netatmo_mode_off
                hold_action:
                  action: more-info
                image: /local/netatmo/off.png
                style:
                  top: 37%
                  left: 86%
                  width: 09%
              - type: image
                entity: climate.piece_de_vie
                title: Up Consigne
                tap_action:
                  action: call-service
                  service: Script.netatmo_increment_consigne
                hold_action:
                  action: more-info
                image: /local/netatmo/plus.png
                style:
                  top: 67.5%
                  left: 78.4%
                  width: 6%
              - type: image
                entity: climate.piece_de_vie
                title: Down Consigne
                tap_action:
                  action: call-service
                  service: Script.netatmo_decrement_consigne
                hold_action:
                  action: more-info
                image: /local/netatmo/moins.png
                style:
                  top: 67.5%
                  left: 61.5%
                  width: 6%
              - type: image
                entity: sensor.netatmo_hvac_action
                title: Temoin Chauffe
                tap_action:
                  action: none
                image: /local/netatmo/iddle_on.png
                style:
                  top: 74%
                  left: 25.5%
                  width: 7%
                state_filter:
                  heating: brightness(100%) saturate(1)
                  idle: opacity(0%)
              - type: image
                entity: sensor.netatmo_preset_mode
                title: schedule
                tap_action:
                  action: none
                image: /local/netatmo/chauffe.png
                style:
                  top: 30%
                  left: 39%
                  width: 12%
                state_filter:
                  boost: opacity(0%)
                  Schedule: brightness(100%) saturate(1)
                  away: opacity(0%)
                  Frost Guard: opacity(0%)
              - type: image
                entity: sensor.netatmo_preset_mode
                title: absent
                tap_action:
                  action: none
                image: /local/netatmo/absent.png
                style:
                  top: 30%
                  left: 39%
                  width: 9%
                state_filter:
                  boost: opacity(0%)
                  Schedule: opacity(0%)
                  away: brightness(100%) saturate(1)
                  Frost Guard: opacity(0%)
              - type: state-label
                entity: sensor.netatmo_temperature_courante
                unit_of_measurement: .
                style:
                  top: 55%
                  left: 25.5%
                  font-size: 1.9em
                  color: black
                  font-weight: 600
              - type: state-label
                entity: sensor.netatmo_temperature_consigne
                style:
                  top: 25%
                  left: 25.5%
                  font-size: 1em
                  color: white
                  font-weight: 600
              - type: state-label
                entity: sensor.thermostat_battery_percent
                tap_action:
                  action: none
                style:
                  top: 81%
                  left: 93%
                  font-size: 0.7em
                  color: grey
                  font-weight: 600
              - type: state-icon
                entity: sensor.thermostat_battery_percent
                title: Niveau Batterie
                icon: mdi:battery-high
                tap_action:
                  action: more-info
                style:
                  top: 88%
                  left: 93%
                  '--paper-item-icon-color': grey
          - type: horizontal-stack
            cards:
              - type: entities
                entities:
                  - entity: automation.noel_03_allumer_sapin
                  - entity: automation.securite_02_alarme_paradis
                title: Automatisation
                show_header_toggle: false
                state_color: true
              - type: custom:button-card
                entity: vacuum.dreame_p2009_86d4_robot_cleaner
                name: Conchita
                show_icon: true
                icon: mdi:robot-vacuum
                show_name: true
                show_state: false
                show_label: true
                label: |
                  [[[
                    if (states['vacuum.dreame_p2009_86d4_robot_cleaner'].state == "docked")
                      return 'se repose';
                    if (states['vacuum.dreame_p2009_86d4_robot_cleaner'].state == "cleaning")
                      return 'travaille';
                  ]]]
                styles:
                  img_cell:
                    - background-color: rgba(255,0,0,0.2)
                    - border-radius: 50%
                    - place-self: start
                    - width: 50px
                    - height: 40px
                    - margin-top: 1px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 15%
                    - left: 34%
                    - font-size: 100%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 40%
                    - left: 48%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['vacuum.dreame_p2009_86d4_robot_cleaner'].state == "cleaning")
                            return 'var(--text_on)';
                          if (states['vacuum.dreame_p2009_86d4_robot_cleaner'].state == "Retour")
                            return 'firebrick';
                          if (states['vacuum.dreame_p2009_86d4_robot_cleaner'].state == "En pause")
                            return 'firebrick';
                          if (states['vacuum.dreame_p2009_86d4_robot_cleaner'].state == "docked")
                            return 'grey';
                        ]]]
                    - top: 25%
                    - left: 34%
                    - font-weight: bold
                    - font-size: 90%
                    - position: absolute
                  card:
                    - height: 150px
                    - padding: 10px
                    - font-size: 120%
                    - background-color: '#ffffff'
                    - border-radius: 15px
                  custom_fields:
                    batterie:
                      - top: 10%
                      - left: 80%
                      - color: |
                          [[[
                            if (entity.state == 'cleaning')
                              return 'lightgrey';
                           return 'grey';
                          ]]]
                      - font-weight: bold
                      - font-size: 90%
                      - position: absolute
                    ic:
                      - position: absolute
                      - top: 55%
                      - left: 50%
                      - width: calc(100% + 1px)
                      - transform: translate(-50%, calc(-50% + 5px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    ic2:
                      - position: absolute
                      - top: 84%
                      - left: 50%
                      - width: calc(100% + 1px)
                      - transform: translate(-50%, calc(-50% + 5px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: cleaning
                    styles:
                      icon:
                        - animation: rotating 4s ease infinite
                        - color: var(--icon_on)
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: rgba(255,127,80,0.5)
                      name:
                        - color: var(--text_on)
                      label:
                        - color: var(--text_on)
                  - value: docked
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: grey
                      name:
                        - color: grey
                  - value: error
                    styles:
                      icon:
                        - animation: blink 0.8s ease infinite
                        - color: null
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      name:
                        - color: firebrick
                      label:
                        - color: firebrick
                tap_action:
                  action: more-info
                double_tap_action:
                  action: navigate
                  navigation_path: /lovelace/1
                custom_fields:
                  batterie: >
                    [[[ return
                    states['sensor.dreame_p2009_86d4_battery_level'].state +
                    "%"]]]
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          show_name: false
                          icon: mdi:play-circle
                          styles:
                            icon:
                              - color: darkslategrey
                              - width: 50%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          tap_action:
                            action: call-service
                            service: vacuum.start
                            service_data:
                              entity_id: vacuum.dreame_p2009_86d4_robot_cleaner
                        - type: custom:button-card
                          show_name: false
                          icon: mdi:stop-circle
                          styles:
                            icon:
                              - color: darkslategrey
                              - width: 50%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          tap_action:
                            action: call-service
                            service: vacuum.stop
                            service_data:
                              entity_id: vacuum.dreame_p2009_86d4_robot_cleaner
                        - type: custom:button-card
                          show_name: false
                          icon: mdi:home-circle
                          styles:
                            icon:
                              - color: darkslategrey
                              - width: 50%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          tap_action:
                            action: call-service
                            service: vacuum.start
                            service_data:
                              entity_id: vacuum.dreame_p2009_86d4_robot_cleaner
                      columns: 3
                      square: false
                  ic2:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          show_name: false
                          icon: mdi:sofa
                          styles:
                            icon:
                              - color: darkslategrey
                              - width: 44%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          tap_action:
                            action: call-service
                            service: vacuum.start
                            service_data:
                              entity_id: vacuum.dreame_p2009_86d4_robot_cleaner
                        - type: custom:button-card
                          show_name: false
                          icon: mdi:food
                          styles:
                            icon:
                              - color: darkslategrey
                              - width: 40%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          tap_action:
                            action: call-service
                            service: vacuum.stop
                            service_data:
                              entity_id: vacuum.dreame_p2009_86d4_robot_cleaner
                        - type: custom:button-card
                          show_name: false
                          icon: mdi:bed
                          styles:
                            icon:
                              - color: darkslategrey
                              - width: 44%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          tap_action:
                            action: call-service
                            service: vacuum.start
                            service_data:
                              entity_id: vacuum.dreame_p2009_86d4_robot_cleaner
                      columns: 3
                      square: false
          - type: custom:text-divider-row
            text: ALARME & SECURITE
            align: center
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: switch.eufy_surveillance
                name: A la maison
                icon: mdi:home
                styles:
                  card:
                    - text-shadow: 0px 0px 0px white
                    - background-color: '#FFFFFF'
                    - padding-left: 10px
                    - border-radius: 20px
                    - padding: 10%
                    - font-size: 15px
                state:
                  - value: 'on'
                    styles:
                      card:
                        - border: solid 1px '#f83e43'
                      icon:
                        - color: green
                    id: on-icon
                  - value: 'off'
                    styles:
                      card:
                        - border: solid 1px '#434343'
                        - box-shadow: none
                      icon:
                        - color: red
                    id: off-icon
                tap_action:
                  action: call-service
                  service: rest_command.eufy_guard_mode_disarmed
              - type: custom:button-card
                entity: switch.eufy_surveillance
                name: En vadrouille
                icon: mdi:tree
                styles:
                  card:
                    - text-shadow: 0px 0px 0px white
                    - background-color: '#FFFFFF'
                    - padding-left: 10px
                    - border-radius: 20px
                    - padding: 10%
                    - font-size: 15px
                state:
                  - value: 'on'
                    styles:
                      card:
                        - border: solid 3px '#434343'
                      icon:
                        - color: green
                    id: on-icon
                  - value: 'off'
                    styles:
                      card:
                        - border: solid 1px '#f83e43'
                        - box-shadow: none
                      icon:
                        - color: red
                    id: off-icon
                tap_action:
                  action: call-service
                  service: rest_command.eufy_guard_mode_home
              - type: custom:button-card
                entity: switch.eufy_surveillance
                name: Nuit
                icon: mdi:weather-night
                styles:
                  card:
                    - text-shadow: 0px 0px 0px white
                    - background-color: '#FFFFFF'
                    - padding-left: 10px
                    - border-radius: 20px
                    - padding: 10%
                    - font-size: 15px
                state:
                  - value: 'on'
                    styles:
                      card:
                        - border: solid 1px '#f83e43'
                      icon:
                        - color: green
                    id: on-icon
                  - value: 'off'
                    styles:
                      card:
                        - border: solid 1px '#434343'
                        - box-shadow: none
                      icon:
                        - color: red
                    id: off-icon
                tap_action:
                  action: call-service
                  service: rest_command.eufy_guard_mode_disarmed
          - type: horizontal-stack
            cards:
              - entity: alarm_control_panel.alarmo
                template: scene
                type: custom:button-card
                name: Alarme
                state:
                  - label: activée
                    id: vert_off
                    value: armed_away
                  - label: désactivée
                    id: rouge_on
                    value: disarmed
              - entity: group.all_doors_sensor_entities
                template: scene
                type: custom:button-card
                name: Ouvertures
                state:
                  - icon: mdi:door-open
                    label: 1
                    id: rouge_on
                    value: 'on'
                  - icon: mdi:door-closed
                    label: RAS
                    id: vert_off
                    value: 'off'
              - entity: group.all_smoke_sensor_entities
                template: scene
                type: custom:button-card
                name: Fumée
                state:
                  - icon: mdi:fire
                    label: Incendie
                    id: rouge_on
                    value: 'on'
                  - icon: mdi:shield-check
                    label: RAS
                    id: vert_off
                    value: 'off'
              - entity: sensor.number_of_motion_sensors_on
                template: scene
                type: custom:button-card
                name: Mouvements
                state:
                  - label: RAS
                    id: vert_off
                    value: '0'
                  - label: détectés
                    id: rouge_on
                    operator: '>'
                    value: '0'
              - type: custom:button-card
                entity: switch.eufy_surveillance
                template: scene
                name: Caméras
                state:
                  - label: activées
                    id: vert_off
                    value: 'on'
                  - label: désactivées
                    id: rouge_on
                    value: 'off'
  - visible:
      - user: b7dc10ea17f14fb8986cb0c130e3a556
    title: Monitoring
    path: monitoring
    icon: mdi:server
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: custom:text-divider-row
            text: RESEAU LOCAL
            align: center
          - type: entities
            entities:
              - type: custom:multiple-entity-row
                entity: sensor.unifi_switch
                icon: mdi:switch
                name: Unifi Dream Machine Pro
                show_entity_picture: true
                show_state: false
                secondary_info:
                  attribute: Uptime
                entities:
                  - entity: sensor.unifi_switch_cpu
                    name: CPU
                  - entity: sensor.unifi_switch_ram
                    name: RAM
                  - icon: mdi:restart
                    tap_action:
                      action: call-service
                      confirmation: true
                      service: shell_command.reboot_unifi_switch
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.unifi_switch_score
                group: true
                font_size: 85
                hours_to_show: 24
                style: |
                  ha-card {
                    border-radius: 0px;
                    box-shadow: none;
                    } 
                show:
                  icon: false
                  graph: false
                  name: false
                  state: false
                  extrema: true
                  average: true
              - type: custom:multiple-entity-row
                entity: sensor.unifi_switch_activity
                name: Activity
                show_state: false
                icon: mdi:arrow-up-down
                secondary_info:
                  entity: sensor.unifi_switch_activity
                  name: ' '
                  unit: ' '
                entities:
                  - entity: sensor.unifi_switch_update
                    name: New Update
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.unifi_switch_activity
                group: true
                hours_to_show: 4
                line_width: 3
                points_per_hour: 15
                show:
                  icon: false
                  name: false
                  state: false
                  labels: true
          - type: entities
            entities:
              - type: custom:multiple-entity-row
                entity: sensor.unifi_ap
                icon: mdi:wifi
                name: Unifi AP-AC-LR
                show_entity_picture: true
                show_state: false
                secondary_info:
                  attribute: Uptime
                entities:
                  - entity: sensor.unifi_ap_cpu
                    name: CPU
                  - entity: sensor.unifi_ap_ram
                    name: RAM
                  - icon: mdi:restart
                    tap_action:
                      action: call-service
                      confirmation: true
                      service: shell_command.reboot_unifi_ap
              - type: custom:multiple-entity-row
                entity: sensor.unifi_ap
                icon: mdi:devices
                name: ' '
                show_state: false
                secondary_info:
                  entity: sensor.unifi_ap
                  name: ' '
                entities:
                  - entity: sensor.unifi_ap_wifi_devices
                    name: 2.4GhZ
                    unit: ' '
                  - entity: sensor.unifi_ap5ghz_wifi_devices
                    name: 5GhZ
                    unit: ' '
                  - entity: sensor.unifi_ap_guests
                    name: Guests
                    unit: ' '
              - type: custom:multiple-entity-row
                entity: sensor.unifi_ap_score
                name: ' '
                icon: mdi:percent-outline
                show_state: false
                secondary_info:
                  entity: sensor.unifi_ap_score
                  name: ' '
                  unit: '% satisfaction'
                entities:
                  - entity: sensor.unifi_ap2_score
                    name: 2gHz
                    unit: '%'
                    tap_action:
                      action: none
                  - entity: sensor.unifi_ap5_score
                    name: 5gHz
                    unit: '%'
                    tap_action:
                      action: none
              - type: custom:multiple-entity-row
                entity: sensor.unifi_ap_activity
                name: Activity
                show_state: false
                icon: mdi:arrow-up-down
                secondary_info:
                  entity: sensor.unifi_ap_activity
                  name: ' '
                  unit: ' '
                entities:
                  - entity: sensor.unifi_ap_update
                    name: New Update
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.unifi_ap_activity
                group: true
                hours_to_show: 4
                line_width: 3
                points_per_hour: 15
                show:
                  icon: false
                  name: false
                  state: false
                  labels: true
          - type: custom:banner-card
            heading: null
            background: url("/local/lovelace/background/adguard.png")
            entities:
              - entity: sensor.adguard_dns_queries
                name: Requêtes
              - entity: sensor.adguard_dns_queries_blocked_ratio
                name: Requêtes bloquées
              - entity: switch.adguard_protection
                name: Protection
      - type: vertical-stack
        cards:
          - entity: sensor.humidite_baie_technique
            state_header: Humidité
            styles:
              width: 80px
              text-align: center
            name: Baie Technique
            icon: mdi:server
            type: custom:multiple-entity-row
            entities:
              - entity: sensor.temperature_baie_technique_2
                name: Température
                styles:
                  width: 80px
                  text-align: center
          - type: custom:text-divider-row
            text: NUC 8i3BEK
            align: center
          - type: horizontal-stack
            cards:
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.processor_use_percent
                name: CPU
                height: 60
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.memory_use_percent
                name: RAM
                height: 60
                font_size: 80
                line_color: '#e74c3c'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.disk_use_percent
                name: SSD
                height: 80
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
          - type: custom:text-divider-row
            text: NAS Synology DS418j
            align: center
          - type: horizontal-stack
            cards:
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.ds418j_cpu_utilization_total
                name: CPU
                height: 80
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.ds418j_memory_usage_real
                name: RAM
                height: 80
                font_size: 80
                line_color: '#e74c3c'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.disk_use_percent
                name: SSD
                height: 80
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
          - type: custom:text-divider-row
            text: Onduleur Eaton
            align: center
          - type: glance
            entities:
              - entity: sensor.ups_load
              - entity: sensor.ups_battery_runtime
              - entity: sensor.ups_battery_charge
      - type: vertical-stack
        cards:
          - type: picture-elements
            elements:
              - type: state-icon
                entity: sensor.home_assistant_v2_db
                icon: mdi:database-check
                style:
                  top: 30%
                  left: 85%
              - type: state-label
                entity: sensor.home_assistant_v2_db
                prefix: 'DB: '
                style:
                  top: 40%
                  left: 85%
              - type: state-icon
                icon: mdi:home-assistant
                entity: sensor.version_disponible
                style:
                  top: 30%
                  left: 20%
              - type: state-label
                entity: sensor.version_disponible
                prefix: 'Dispo: '
                style:
                  top: 40%
                  left: 20%
              - type: state-label
                entity: sensor.version_installee
                prefix: 'Installée: '
                style:
                  top: 48%
                  left: 20%
              - type: state-icon
                icon: hacs:hacs
                entity: sensor.version_installee
                style:
                  top: 30%
                  left: 53%
              - type: state-label
                entity: sensor.hacs
                style:
                  top: 40%
                  left: 53%
              - type: state-badge
                entity: sensor.all_door_available
                style:
                  top: 75%
                  left: 20%
              - type: state-badge
                entity: sensor.all_lights_available
                style:
                  top: 75%
                  left: 40%
              - type: state-badge
                entity: sensor.all_temp_available
                style:
                  top: 75%
                  left: 60%
              - type: state-badge
                entity: sensor.all_move_available
                style:
                  top: 75%
                  left: 80%
            image: /local/images/home_assistant.png
          - type: picture-elements
            image: /local/images/docker2.png
            elements:
              - type: state-label
                entity: sensor.docker_containers_running
                prefix: 'Nombre de conteneurs: '
                style:
                  top: 25%
                  left: 25%
                  color: black
              - type: state-icon
                entity: sensor.docker_containers_running
                style:
                  top: 20%
                  left: 25%
              - type: state-label
                entity: sensor.docker_version
                prefix: 'Version installée: '
                style:
                  top: 12%
                  left: 25%
                  color: black
              - type: state-icon
                entity: sensor.docker_version
                style:
                  top: 07%
                  left: 25%
              - type: state-label
                entity: sensor.docker_homeassistant_state
                style:
                  top: 47%
                  left: 15%
                  color: black
              - type: image
                entity: sensor.docker_homeassistant_state
                image: /local/lovelace/icons/ha.png
                style:
                  top: 40%
                  left: 15%
                  width: 6%
              - type: state-label
                entity: sensor.docker_portainer_state
                style:
                  top: 87%
                  left: 15%
                  color: black
              - type: image
                entity: sensor.docker_portainer_state
                image: /local/lovelace/icons/portainer.png
                style:
                  top: 80%
                  left: 15%
                  width: 6%
              - type: state-label
                entity: sensor.docker_deconz_state
                style:
                  top: 47%
                  left: 30%
                  color: black
              - type: image
                entity: sensor.docker_deconz_state
                image: /local/lovelace/icons/zigbee.png
                style:
                  top: 40%
                  left: 30%
                  width: 6%
              - type: state-label
                entity: sensor.docker_mqtt_state
                style:
                  top: 47%
                  left: 45%
                  color: black
              - type: image
                entity: sensor.docker_mqtt_state
                image: /local/lovelace/icons/mosquitto.png
                style:
                  top: 40%
                  left: 45%
                  width: 6%
              - type: state-label
                entity: sensor.docker_zwavejs2mqtt_state
                style:
                  top: 47%
                  left: 60%
                  color: black
              - type: image
                entity: sensor.docker_zwavejs2mqtt_state
                image: /local/lovelace/icons/zwave2mqtt.png
                style:
                  top: 40%
                  left: 60%
                  width: 6%
              - type: state-label
                entity: sensor.docker_node_red_state
                style:
                  top: 47%
                  left: 75%
                  color: black
              - type: image
                entity: sensor.docker_node_red_state
                image: /local/lovelace/icons/nodered.png
                style:
                  top: 40%
                  left: 75%
                  width: 6%
              - type: state-label
                entity: sensor.docker_adguardhome_state
                style:
                  top: 87%
                  left: 45%
                  color: black
              - type: image
                entity: sensor.docker_adguardhome_state
                image: /local/lovelace/icons/adguard.png
                style:
                  top: 80%
                  left: 45%
                  width: 6%
              - type: state-label
                entity: sensor.docker_traefik_state
                style:
                  top: 87%
                  left: 30%
                  color: black
              - type: image
                entity: sensor.docker_traefik_state
                image: /local/lovelace/icons/traefik.png
                style:
                  top: 80%
                  left: 30%
                  width: 6%
              - type: state-label
                entity: sensor.docker_influxdb_state
                style:
                  top: 67%
                  left: 15%
                  color: black
              - type: image
                entity: sensor.docker_influxdb_state
                image: /local/lovelace/icons/influxdb.png
                style:
                  top: 60%
                  left: 15%
                  width: 6%
              - type: state-label
                entity: sensor.docker_grafana_state
                style:
                  top: 67%
                  left: 30%
                  color: black
              - type: image
                entity: sensor.docker_grafana_state
                image: /local/lovelace/icons/grafana.png
                style:
                  top: 60%
                  left: 30%
                  width: 6%
              - type: state-label
                entity: sensor.docker_bitwarden_state
                style:
                  top: 87%
                  left: 75%
                  color: black
              - type: image
                entity: sensor.docker_bitwarden_state
                image: /local/lovelace/icons/bitwarden.png
                style:
                  top: 80%
                  left: 75%
                  width: 6%
              - type: state-label
                entity: sensor.docker_iobroker_state
                style:
                  top: 67%
                  left: 45%
                  color: black
              - type: image
                entity: sensor.docker_iobroker_state
                image: /local/lovelace/icons/iobroker.png
                style:
                  top: 60%
                  left: 45%
                  width: 6%
              - type: state-label
                entity: sensor.docker_heimdall_state
                style:
                  top: 67%
                  left: 75%
                  color: black
              - type: image
                entity: sensor.docker_heimdall_state
                image: /local/lovelace/icons/heimdall.png
                style:
                  top: 60%
                  left: 75%
                  width: 6%
            style: |
              ha-card {
              background-color: rgba(50,50,50,0.5); /*DARKGRAY*/
              border: 1px solid rgba(245,245,245,0.2); /*GRAY*/
              border-radius: 10px;
              }
          - type: entities
            entities:
              - entity: binary_sensor.raspberrypi_eau
              - entity: binary_sensor.octoprint
                name: OctoPrint
  - title: Surveillance
    path: surveillance
    icon: mdi:security
    badges: []
    cards:
      - type: alarm-panel
        states:
          - arm_home
          - arm_away
          - arm_night
        entity: alarm_control_panel.alarmo
        name: Alarme
      - type: vertical-stack
        cards:
          - type: custom:button-card
            entity: switch.eufy_surveillance
            template:
              - icon_info_bg
              - ouverture
            name: Caméras de surveillance extérieures
            state:
              - label: Caméras activées
                id: vert_off
                value: 'on'
              - label: Caméras désactivées
                id: rouge_on
                value: 'off'
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: switch.eufy_surveillance
                name: A la maison
                icon: mdi:home
                styles:
                  card:
                    - text-shadow: 0px 0px 0px white
                    - background-color: '#FFFFFF'
                    - padding-left: 10px
                    - border-radius: 20px
                    - padding: 10%
                    - font-size: 15px
                state:
                  - value: 'on'
                    styles:
                      card:
                        - border: solid 1px '#f83e43'
                      icon:
                        - color: green
                    id: on-icon
                  - value: 'off'
                    styles:
                      card:
                        - border: solid 1px '#434343'
                        - box-shadow: none
                      icon:
                        - color: red
                    id: off-icon
                tap_action:
                  action: call-service
                  service: rest_command.eufy_guard_mode_disarmed
              - type: custom:button-card
                entity: switch.eufy_surveillance
                name: En vadrouille
                icon: mdi:tree
                styles:
                  card:
                    - text-shadow: 0px 0px 0px white
                    - background-color: '#FFFFFF'
                    - padding-left: 10px
                    - border-radius: 20px
                    - padding: 10%
                    - font-size: 15px
                state:
                  - value: 'on'
                    styles:
                      card:
                        - border: solid 3px '#434343'
                      icon:
                        - color: green
                    id: on-icon
                  - value: 'off'
                    styles:
                      card:
                        - border: solid 1px '#f83e43'
                        - box-shadow: none
                      icon:
                        - color: red
                    id: off-icon
                tap_action:
                  action: call-service
                  service: rest_command.eufy_guard_mode_home
              - type: custom:button-card
                entity: switch.eufy_surveillance
                name: Nuit
                icon: mdi:weather-night
                styles:
                  card:
                    - text-shadow: 0px 0px 0px white
                    - background-color: '#FFFFFF'
                    - padding-left: 10px
                    - border-radius: 20px
                    - padding: 10%
                    - font-size: 15px
                state:
                  - value: 'on'
                    styles:
                      card:
                        - border: solid 1px '#f83e43'
                      icon:
                        - color: green
                    id: on-icon
                  - value: 'off'
                    styles:
                      card:
                        - border: solid 1px '#434343'
                        - box-shadow: none
                      icon:
                        - color: red
                    id: off-icon
                tap_action:
                  action: call-service
                  service: rest_command.eufy_guard_mode_disarmed
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.camera_jardin_motion_detection
                template:
                  - icon_info_bg
                  - ouverture
                name: Caméra jardin
                state:
                  - icon: mdi:run
                    label: Présence détectée
                    id: rouge_on
                    value: 'true'
                  - icon: mdi:run
                    label: RAS
                    id: vert_off
                    value: 'false'
              - type: custom:button-card
                entity: sensor.camera_arriere_maison_motion_detection
                template:
                  - icon_info_bg
                  - ouverture
                name: Caméra arrière
                state:
                  - icon: mdi:run
                    label: Présence détectée
                    id: rouge_on
                    value: 'true'
                  - icon: mdi:run
                    label: RAS
                    id: vert_off
                    value: 'false'
          - type: horizontal-stack
            cards:
              - type: picture-entity
                entity: camera.jardin
              - type: picture-entity
                entity: camera.arriere_maison
          - type: horizontal-stack
            cards:
              - type: picture-entity
                entity: camera.netatmo_ma_camera_netatmo_salon
              - type: picture-entity
                entity: camera.c1c
      - type: vertical-stack
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: >-
                  binary_sensor.porte_fenetre_salon_access_control_window_door_is_open
                template:
                  - icon_info_bg
                  - ouverture_fenetre
                name: Porte fenêtre
              - type: custom:button-card
                entity: >-
                  binary_sensor.porte_fenetre_salle_a_manger_access_control_window_door_is_open
                template:
                  - icon_info_bg
                  - ouverture_fenetre
                name: Salle à manger
              - type: custom:button-card
                entity: >-
                  binary_sensor.presence_descente_garage_home_security_motion_detection
                template:
                  - icon_info_bg
                  - ouverture
                name: Porte garage
                state:
                  - icon: mdi:door-open
                    label: ouverte
                    id: rouge_on
                    value: 'on'
                  - icon: mdi:door-closed
                    label: fermée
                    id: vert_off
                    value: 'off'
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: binary_sensor.velux_maxence_access_control_window_door_is_open
                template:
                  - icon_info_bg
                  - ouverture_fenetre
                name: Velux Maxence
              - type: custom:button-card
                entity: binary_sensor.strips_mazw_access_control_window_door_is_open
                template:
                  - icon_info_bg
                  - ouverture_fenetre
                name: Velux Chloé
              - type: custom:button-card
                entity: binary_sensor.strips_mazw_access_control_window_door_is_open
                template:
                  - icon_info_bg
                  - ouverture_fenetre
                name: Velux Parents
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: binary_sensor.presence_garage_home_security_motion_detection
                template:
                  - icon_info_bg
                  - ouverture
                name: Garage
                state:
                  - label: Mouvement
                    id: rouge_on
                    value: 'on'
                  - label: RAS
                    id: vert_off
                    value: 'off'
              - type: custom:button-card
                entity: binary_sensor.mouvement_01_salle_de_jeux_occupancy
                template:
                  - icon_info_bg
                  - ouverture
                name: Buanderie
                state:
                  - label: Mouvement
                    id: rouge_on
                    value: 'on'
                  - label: RAS
                    id: vert_off
                    value: 'off'
              - color_type: blank-card
                type: custom:button-card
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: >-
                  binary_sensor.presence_descente_garage_home_security_motion_detection
                template:
                  - icon_info_bg
                  - ouverture
                name: Descente garage
                state:
                  - label: Mouvement
                    id: rouge_on
                    value: 'on'
                  - label: RAS
                    id: vert_off
                    value: 'off'
          - type: horizontal-stack
            cards:
              - entity: binary_sensor.detecteur_fumee_smoke_alarm_smoke_detected
                type: custom:button-card
                template:
                  - icon_info_bg
                  - ouverture
                name: Couloir RdC
                state:
                  - icon: mdi:fire
                    label: Incendie
                    id: rouge_on
                    value: 'on'
                  - label: RAS
                    id: vert_off
                    value: 'off'
              - entity: >-
                  binary_sensor.detecteur_fumee_pallier_smoke_alarm_smoke_detected
                type: custom:button-card
                template:
                  - icon_info_bg
                  - ouverture
                name: Palier 1ier étage
                state:
                  - icon: mdi:fire
                    label: Incendie
                    id: rouge_on
                    value: 'on'
                  - icon: mdi:shield-check
                    label: RAS
                    id: vert_off
                    value: 'off'
  - title: Jardin
    path: jardin
    visible:
      - user: b7dc10ea17f14fb8986cb0c130e3a556
    icon: mdi:tree
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: custom:banner-card
            heading: null
            background: url("/local/lovelace/background/dracaena_marginata.png")
            entities:
              - entity: sensor.miflora_dracaena_margenata_moisture
                name: Humidité
              - entity: sensor.miflora_dracaena_margenata_conductivity
                name: Conductivité
              - entity: sensor.miflora_dracaena_margenata_light
                name: Luminosité
          - type: custom:banner-card
            heading: null
            background: url("/local/lovelace/background/pachira.png")
            entities:
              - entity: sensor.miflora_pseudo_ficus_moisture
                name: Humidité
              - entity: sensor.miflora_pseudo_ficus_conductivity
                name: Conductivité
              - entity: sensor.miflora_pseudo_ficus_light
                name: Luminosité
          - type: custom:banner-card
            heading: null
            background: url("/local/lovelace/background/monstera_deliciosa.png")
            entities:
              - entity: sensor.miflora_monstera_deliciosa_moisture
                name: Humidité
              - entity: sensor.miflora_monstera_deliciosa_conductivity
                name: Conductivité
              - entity: sensor.miflora_monstera_deliciosa_light
                name: Luminosité
          - type: custom:banner-card
            heading: null
            background: url("/local/lovelace/background/palmier_de_montagne.png")
            entities:
              - entity: sensor.miflora_palmier_de_montagne_moisture
                name: Humidité
              - entity: sensor.miflora_palmier_de_montagne_conductivity
                name: Conductivité
              - entity: sensor.miflora_palmier_de_montagne_light
                name: Luminosité
      - type: vertical-stack
        cards:
          - type: custom:button-card
            entity: sensor.netatmo_maison_piece_de_vie_pluviometre_rain
            template:
              - icon_info_bg
              - ouverture
            name: Pluie
            state:
              - label: Il ne pleut pas en ce moment
                id: vert_off
                value: '0'
              - label: Il pleut actuellement
                id: rouge_on
                value: '1'
          - type: entities
            entities:
              - entity: sensor.netatmo_maison_piece_de_vie_pluviometre_rain_today
                name: Pluie du jour
              - entity: sensor.pluie_semaine
                state_header: Consommation
                styles:
                  width: 80px
                  text-align: center
                name: Cette semaine
                icon: mdi:water
                type: custom:multiple-entity-row
                entities:
                  - entity: sensor.pluie_semaine_derniere
                    name: Semaine dernière
                    styles:
                      width: 80px
                      text-align: center
              - entity: sensor.pluie_mois
                state_header: Consommation
                styles:
                  width: 80px
                  text-align: center
                name: Ce mois
                icon: mdi:water
                type: custom:multiple-entity-row
                entities:
                  - entity: sensor.pluie_mois_dernier
                    name: Mois dernier
                    styles:
                      width: 80px
                      text-align: center
              - entity: sensor.pluie_annee
                state_header: Consommation
                styles:
                  width: 80px
                  text-align: center
                name: Cette année
                icon: mdi:water
                type: custom:multiple-entity-row
                entities:
                  - entity: sensor.pluie_annee_derniere
                    name: annee dernière
                    styles:
                      width: 80px
                      text-align: center
          - type: horizontal-stack
            cards:
              - type: custom:mini-graph-card
                style: |-
                  ha-card{
                    background-size: 100% 100%;
                  }
                entities:
                  - entity: sensor.netatmo_maison_piece_de_vie_pluviometre_rain_today
                    aggregate_func: last
                    state_adaptive_color: true
                name: Pluie quotidienne
                font_size: 85
                font_size_header: 14
                align_icon: left
                align_state: center
                align_header: left
                hours_to_show: 168
                hour24: true
                group_by: date
                unit: mm / jour
                icon: mdi:waves
                line_width: 1
                more_info: true
                lower_bound: 0
                upper_bound: 20
                show:
                  extrema: false
                  graph: bar
                color_thresholds:
                  - value: 4
                    color: '#90CAF9'
                  - value: 10
                    color: '#2196F3'
      - type: vertical-stack
        cards:
          - type: custom:sun-card
          - type: custom:apexcharts-card
            graph_span: 7d
            header:
              show: true
              title: Pression atmosphérique
              show_states: true
              colorize_states: true
            series:
              - entity: sensor.netatmo_maison_piece_de_vie_pressure
  - title: Donnees
    path: donnees
    icon: mdi:graph
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            entities:
              - entity: sensor.compteur_eau_status
                name: Etat du compteur
              - entity: sensor.consommation_total
                name: Affichage compteur
                secondary_info: last-changed
              - entity: sensor.consommation_eau_quotidien_litre
                state_header: Consommation
                name: Aujourd'hui
                icon: mdi:water
                type: custom:multiple-entity-row
                styles:
                  width: 80px
                  text-align: center
                entities:
                  - entity: sensor.consommation_eau_quotidien_litre_precedent
                    name: Hier
                    styles:
                      width: 80px
                      text-align: center
                  - entity: sensor.eau_cout_jour
                    name: Coût
                    styles:
                      width: 80px
                      text-align: center
              - entity: sensor.consommation_eau_semaine_litre
                state_header: Consommation
                styles:
                  width: 80px
                  text-align: center
                name: Cette semaine
                icon: mdi:water
                type: custom:multiple-entity-row
                entities:
                  - entity: sensor.consommation_eau_semaine_litre_precedent
                    name: Semaine dernière
                    styles:
                      width: 80px
                      text-align: center
                  - entity: sensor.eau_cout_semaine
                    name: Coût
                    styles:
                      width: 80px
                      text-align: center
              - entity: sensor.consommation_eau_mois_litre
                state_header: Consommation
                styles:
                  width: 80px
                  text-align: center
                name: Ce mois
                icon: mdi:water
                type: custom:multiple-entity-row
                entities:
                  - entity: sensor.consommation_eau_mois_litre_precedent
                    name: Mois dernier
                    styles:
                      width: 80px
                      text-align: center
                  - entity: sensor.eau_cout_mois
                    name: Coût
                    styles:
                      width: 80px
                      text-align: center
              - entity: sensor.consommation_eau_annee_litre
                state_header: Consommation
                styles:
                  width: 80px
                  text-align: center
                name: Cette année
                icon: mdi:water
                type: custom:multiple-entity-row
                entities:
                  - entity: sensor.water_last_month
                    styles:
                      width: 80px
                      text-align: center
                  - entity: sensor.eau_cout_annee
                    name: Coût
                    styles:
                      width: 80px
                      text-align: center
          - type: horizontal-stack
            cards:
              - type: custom:mini-graph-card
                style: |-
                  ha-card{
                    transform: scale(0.96);
                    background-size: 100% 100%;
                  }
                entities:
                  - entity: sensor.consommation_eau_heure_litre
                    name: Conso à l'heure
                    aggregate_func: max
                font_size: 85
                font_size_header: 14
                align_icon: left
                align_state: center
                align_header: left
                height: 300
                hours_to_show: 48
                hour24: true
                group_by: hour
                unit: L / Heure
                icon: mdi:waves
                line_width: 1
                more_info: true
                lower_bound: 0
                upper_bound: 50
                show:
                  icon_adaptive_color: true
                  name_adaptive_color: true
                  name: true
                  icon: true
                  state: true
                  fill: fade
                  legend: true
                  extrema: false
                  graph: bar
                color_thresholds:
                  - value: 20
                    color: '#64c2f8'
                  - value: 35
                    color: '#2c8ac0'
                  - value: 50
                    color: '#1c5f85'
                  - value: 70
                    color: '#0c3952'
              - type: custom:mini-graph-card
                style: |-
                  ha-card{
                    transform: scale(0.96);
                    background-size: 100% 100%;
                  }
                entities:
                  - entity: sensor.consommation_eau_quotidien_litre
                    aggregate_func: last
                    state_adaptive_color: true
                name: Conso quotidienne
                font_size: 85
                font_size_header: 14
                align_icon: left
                align_state: center
                align_header: left
                height: 300
                hours_to_show: 168
                hour24: true
                group_by: date
                unit: L / Jour
                icon: mdi:waves
                line_width: 1
                more_info: true
                lower_bound: 0
                upper_bound: 950
                show:
                  extrema: false
                  graph: bar
                color_thresholds:
                  - value: 150
                    color: '#2196F3'
                  - value: 200
                    color: '#0D47A1'
                  - value: 250
                    color: '#1976D2'
                  - value: 300
                    color: '#42A5F5'
                  - value: 400
                    color: '#90CAF9'
      - type: vertical-stack
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.netatmo_maison_piece_de_vie_temperature
                name: Piece de vie
                height: 80
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.bureau
                name: Bureau
                height: 80
                font_size: 80
                line_color: '#e74c3c'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.salle_de_jeux
                name: Salle de jeu
                height: 80
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
          - type: horizontal-stack
            cards:
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - >-
                    sensor.netatmo_maison_piece_de_vie_chambre_parentale_temperature
                name: Parents
                height: 80
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.chambre_maxence
                name: Chloé
                height: 80
                font_size: 80
                line_color: '#e74c3c'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.chambre_maxence
                name: Maxence
                height: 80
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
          - type: horizontal-stack
            cards:
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.cuisine
                name: Cuisine
                height: 80
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.smoke_detector_air_temperature
                name: Bain
                height: 80
                font_size: 80
                line_color: '#e74c3c'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.multisensor_6_air_temperature
                name: Garage
                height: 80
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
          - type: horizontal-stack
            cards:
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.smoke_detector_air_temperature_2
                name: Pallier
                height: 80
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.smoke_detector_air_temperature_2
                name: Douche
                height: 80
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
  - title: Wanhao
    path: wanhao
    icon: mdi:printer-3d
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: horizontal-stack
            cards:
              - entity: switch.prise_02_imprimante
                template: switch
                type: custom:button-card
                name: Prise
                state:
                  - label: 'OFF'
                    id: rouge_off
                    value: 'off'
                  - label: 'ON'
                    id: vert_on
                    value: 'on'
              - entity: sensor.dispo_imprimante
                icon: mdi:printer-3d
                template: switch
                type: custom:button-card
                name: Imprimante
                state:
                  - label: non connectée
                    id: rouge_off
                    value: Disconnected
                  - label: connectée
                    id: vert_on
                    value: Connected
              - entity: binary_sensor.octoprint
                template: switch
                type: custom:button-card
                name: Octoprint
                state:
                  - label: KO
                    id: rouge_off
                    value: 'off'
                  - label: OK
                    id: vert_on
                    value: 'on'
          - aspect_ratio: 50%
            camera_image: camera.octoprint
            entity: camera.octoprint
            image: http://192.168.10.20/webcam/?action=snapshot
            show_name: false
            show_state: false
            type: picture-entity
          - type: custom:button-card
            template:
              - bouton_titre
            style:
              .: |
                ha-card {
                    --ha-card-background: none !important;
                    box-shadow: none !important;
                    font-family: Avenir
                }
            name: |
              [[[ return "Automatismes"]]]
          - type: entities
            entities:
              - entity: input_boolean.arret_imprimante
              - entity: automation.connexion_wanhao_octoprint
              - entity: automation.fin_impression_3d
              - entity: automation.fin_impression_coupure_courant
      - type: entities
        entities:
          - entity: sensor.octoprint_estimated_finish_time
            name: Estimated Finish Time
          - entity: sensor.octoprint_job_percentage
            name: Job Percentage
          - entity: binary_sensor.octoprint_printing_2
            name: Printing
          - entity: binary_sensor.octoprint_printing_error
            name: Printing Error
          - entity: sensor.octoprint_start_time
            name: Start Time
        title: OctoPrint
      - type: vertical-stack
        cards:
          - type: custom:button-card
            template:
              - bouton_titre
            style:
              .: |
                ha-card {
                    --ha-card-background: none !important;
                    box-shadow: none !important;
                    font-family: Avenir
                }
            name: |
              [[[ return "Disponibilités et stockage des bobines"]]]
          - type: custom:bar-card
            entities:
              - entity: input_number.filament_noir_restant
                severity:
                  - from: '1'
                    to: '50'
                    color: red
                    hide: true
                    icon: mdi:alert
                icon: mdi:printer-3d-nozzle
                color: black
              - entity: input_number.filament_blanc_restant
                color: white
                icon: mdi:printer-3d-nozzle
              - entity: input_number.filament_gris_restant
                icon: mdi:printer-3d-nozzle
                color: grey
                severity:
                  - from: '1'
                    to: '50'
                    color: red
                    icon: mdi:alert
                    hide: true
              - entity: input_number.filament_bleu_restant
                icon: mdi:printer-3d-nozzle
                color: blue
              - entity: input_number.filament_orange_restant
                icon: mdi:printer-3d-nozzle
                color: orange
              - entity: input_number.filament_violet_restant
                color: purple
                icon: mdi:printer-3d-nozzle
              - entity: input_number.filament_vert_restant
                color: green
                icon: mdi:printer-3d-nozzle
            direction: up
            height: 200px
            decimal: 0
            max: 330
            min: 0
            padding: 2px
            positions:
              icon: inside
              title: outside
              indicator: 'off'
            stack: horizontal
            style: |-
              bar-card-title {
                text-shadow: none;
              }
              ha-icon {
                color: white;
              } 
              bar-card-card:nth-child(1) ha-icon, ha-icon {
                color: white;
              } 
              bar-card-value {
                text-shadow: none;
                color: white;
              } 
              bar-card-currentbar {
                border-radius: 10px;
              } 
              bar-card-backgroundbar {
                border-radius: 10px;
              }
              bar-card-card:nth-child(2) bar-card-value{
                text-shadow: none;
                color: black;
              }  
              bar-card-card:nth-child(5) bar-card-value{
                text-shadow: none;
                color: black;
              }
              bar-card-card:nth-child(6) bar-card-value{
                text-shadow: none;
                color: black;
              }
          - type: entities
            entities:
              - entity: input_boolean.reset_filament
          - type: conditional
            conditions:
              - entity: input_boolean.reset_filament
                state: 'on'
            card:
              type: entities
              entities:
                - entity: input_number.filament_noir_restant
                - entity: input_number.filament_blanc_restant
                - entity: input_number.filament_bleu_restant
                - entity: input_number.filament_gris_restant
                - entity: input_number.filament_orange_restant
                - entity: input_number.filament_violet_restant
                - entity: input_number.filament_vert_restant
          - type: conditional
            conditions:
              - entity: input_boolean.nouvelle_impression
                state: 'off'
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  template:
                    - bouton_titre
                  style:
                    .: |
                      ha-card {
                          --ha-card-background: none !important;
                          box-shadow: none !important;
                          font-family: Avenir
                      }
                  name: |
                    [[[ return "Consommation de filament"]]]
                - type: markdown
                  content: >-
                    Une impression semble en cours sur la Wanhao D12. Merci de
                    choisir la bobine utilisée afin de déduire la quantité de
                    filament qui sera utilisée : {{
                    states('input_number.longueur_filament') }} m pour cette
                    impression.
                - type: custom:bar-card
                  entities:
                    - entity: input_number.filament_noir_restant
                      severity:
                        - from: '1'
                          to: '50'
                          color: red
                          hide: true
                          icon: mdi:alert
                      icon: mdi:printer-3d-nozzle
                      color: black
                      tap_action:
                        action: call-service
                        service: script.mise_a_jour_bobine_noire
                    - entity: input_number.filament_blanc_restant
                      severity:
                        - from: '1'
                          to: '50'
                          color: red
                          hide: true
                          icon: mdi:alert
                      icon: mdi:printer-3d-nozzle
                      color: white
                      tap_action:
                        action: call-service
                        service: script.mise_a_jour_bobine_blanche
                    - entity: input_number.filament_gris_restant
                      icon: mdi:printer-3d-nozzle
                      color: grey
                      severity:
                        - from: '1'
                          to: '50'
                          color: red
                          icon: mdi:alert
                          hide: true
                      tap_action:
                        action: call-service
                        service: script.mise_a_jour_bobine_grise
                    - entity: input_number.filament_bleu_restant
                      icon: mdi:printer-3d-nozzle
                      color: blue
                      tap_action:
                        action: call-service
                        service: script.mise_a_jour_bobine_bleu
                    - entity: input_number.filament_orange_restant
                      icon: mdi:printer-3d-nozzle
                      color: orange
                      tap_action:
                        action: call-service
                        service: script.mise_a_jour_bobine_orange
                    - entity: input_number.filament_violet_restant
                      color: purple
                      direction: up
                      icon: mdi:printer-3d-nozzle
                      tap_action:
                        action: call-service
                        service: script.mise_a_jour_bobine_violet
                    - entity: input_number.filament_vert_restant
                      color: green
                      direction: up
                      icon: mdi:printer-3d-nozzle
                      tap_action:
                        action: call-service
                        service: script.mise_a_jour_bobine_verte
                  direction: up
                  height: 200px
                  decimal: 0
                  max: '330'
                  min: 0
                  padding: 2px
                  positions:
                    icon: inside
                    title: outside
                    indicator: 'off'
                  stack: horizontal
                  style: |-
                    bar-card-title {
                      text-shadow: none;
                    }
                    ha-icon {
                      color: white;
                    } 
                    bar-card-card:nth-child(1) ha-icon, ha-icon {
                      color: white;
                    } 
                    bar-card-value {
                      text-shadow: none;
                      color: white;
                    } 
                    bar-card-currentbar {
                      border-radius: 10px;
                    } 
                    bar-card-backgroundbar {
                      border-radius: 10px;
                    }
                    bar-card-card:nth-child(2) bar-card-value{
                      text-shadow: none;
                      color: black;
                    }  
                    bar-card-card:nth-child(5) bar-card-value{
                      text-shadow: none;
                      color: black;
                    }
                    bar-card-card:nth-child(6) bar-card-value{
                      text-shadow: none;
                      color: black;
                    }
  - title: Au Paradis
    path: au-paradis
    icon: mdi:emoticon-cool
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: custom:meteofrance-weather-card
            number_of_forecasts: '7'
            current: true
            one_hour_forecast: false
            forecast: true
            details: false
            alert_forecast: false
            cloudCoverEntity: sensor.moissac_bellevue_cloud_cover
            rainChanceEntity: sensor.moissac_bellevue_rain_chance
            freezeChanceEntity: sensor.moissac_bellevue_freeze_chance
            snowChanceEntity: sensor.moissac_bellevue_snow_chance
            uvEntity: sensor.moissac_bellevue_uv
            entity: weather.moissac_bellevue
            name: Mon petit paradis
            detailEntity: sensor.temperature_exterieur
          - type: horizontal-stack
            cards:
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.temperature_exterieur
                name: Jardin
                height: 200
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
              - type: custom:mini-graph-card
                card_mod:
                  style: |
                    ha-card {
                      background: none;
                      box-shadow: none;    
                    }
                entities:
                  - sensor.temperature_salon
                name: Maison
                height: 200
                font_size: 80
                line_color: '#3498db'
                line_width: 8
                hours_to_show: 24
                graph: line
                detail: 2
                show:
                  extrema: true
      - type: vertical-stack
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.temperature_parents
                name: Entrée
                icon: mdi:door
                show_icon: true
                show_name: true
                show_state: true
                show_label: true
                label: >
                  [[[ return (states['sensor.humidite_parents'].state ) + "%";
                  ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: |
                        [[[
                          if (states['sensor.temperature_parents'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_parents'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 150%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.humidite_parents'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.humidite_parents'].state > 70)
                            return 'dodgerblue';
                          return 'darkgrey';
                        ]]]
                    - top: 57%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 110%
                    - position: absolute
                  card:
                    - height: 125px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    ic:
                      - position: absolute
                      - top: 40%
                      - left: 80%
                      - width: calc(60% + 1px)
                      - transform: translate(-40%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 110%
                      - left: 40%
                      - width: calc(75% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: '0'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - operator: '>'
                    value: '0'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                custom_fields:
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.presence_salon
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'True'
                              icon: mdi:run-fast
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'False'
                              icon: mdi:exit-run
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.detecteur_porte_garage
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'False'
                              icon: mdi:door-open
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'True'
                              icon: mdi:door-closed
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                      columns: 1
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_parents
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: sensor.temperature_parents
                name: SdB
                icon: mdi:water
                show_icon: true
                show_name: true
                show_state: true
                show_label: true
                label: >
                  [[[ return (states['sensor.humidite_parents'].state ) + "%";
                  ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: |
                        [[[
                          if (states['sensor.temperature_parents'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_parents'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 150%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.humidite_parents'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.humidite_parents'].state > 70)
                            return 'dodgerblue';
                          return 'darkgrey';
                        ]]]
                    - top: 57%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 110%
                    - position: absolute
                  card:
                    - height: 125px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    ic:
                      - position: absolute
                      - top: 40%
                      - left: 80%
                      - width: calc(60% + 1px)
                      - transform: translate(-40%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 110%
                      - left: 40%
                      - width: calc(75% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: '0'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - operator: '>'
                    value: '0'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                custom_fields:
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.presence_salon
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'True'
                              icon: mdi:run-fast
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'False'
                              icon: mdi:exit-run
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.detecteur_porte_garage
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'False'
                              icon: mdi:door-open
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'True'
                              icon: mdi:door-closed
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                      columns: 1
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_parents
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.temperature_salon
                name: Séjour
                icon: mdi:sofa
                show_icon: true
                show_name: true
                show_state: true
                show_label: true
                label: |
                  [[[ return (states['sensor.humidite_salon'].state ) + "%"; ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: |
                        [[[
                          if (states['sensor.temperature_parents'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_parents'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 150%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.humidite_parents'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.humidite_parents'].state > 70)
                            return 'dodgerblue';
                          return 'darkgrey';
                        ]]]
                    - top: 57%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 110%
                    - position: absolute
                  card:
                    - height: 125px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    ic:
                      - position: absolute
                      - top: 40%
                      - left: 80%
                      - width: calc(60% + 1px)
                      - transform: translate(-40%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 110%
                      - left: 40%
                      - width: calc(75% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_parents'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_parents'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - operator: '>'
                    value: '0'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                custom_fields:
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.presence_salon
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'True'
                              icon: mdi:run-fast
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'False'
                              icon: mdi:exit-run
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.detecteur_porte_garage
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'False'
                              icon: mdi:window-open
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'True'
                              icon: mdi:window-closed
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                      columns: 1
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_salon
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: sensor.temperature_salon
                name: Cuisine
                icon: mdi:food
                show_icon: true
                show_name: true
                show_state: false
                show_label: true
                label: >
                  [[[ return (states['sensor.temperature_salon'].state ) + "°";
                  ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: lightgrey
                    - top: 15%
                    - left: 50%
                    - font-size: 90%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.temperature_salon'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_salon'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 150%
                    - position: absolute
                  card:
                    - height: 125px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    ic:
                      - position: absolute
                      - top: 32%
                      - left: 80%
                      - width: calc(60% + 1px)
                      - transform: translate(-40%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 110%
                      - left: 40%
                      - width: calc(75% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - value: 'off'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_enfants'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_enfants'].state > 24)
                                return 'red';
                             return 'grey';
                            ]]]
                custom_fields:
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.presence_salon
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              icon: mdi:run-fast
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'False'
                              icon: mdi:exit-run
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.detecteur_porte_garage
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'False'
                              icon: mdi:windows-open
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'True'
                              icon: mdi:window-closed
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                      columns: 1
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_enfants
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.temperature_parents
                name: Parents
                icon: mdi:bed
                show_icon: true
                show_name: true
                show_state: true
                show_label: true
                label: >
                  [[[ return (states['sensor.humidite_parents'].state ) + "%";
                  ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: |
                        [[[
                          if (states['sensor.temperature_parents'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_parents'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 150%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.humidite_parents'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.humidite_parents'].state > 70)
                            return 'dodgerblue';
                          return 'darkgrey';
                        ]]]
                    - top: 57%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 110%
                    - position: absolute
                  card:
                    - height: 125px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    ic:
                      - position: absolute
                      - top: 40%
                      - left: 80%
                      - width: calc(60% + 1px)
                      - transform: translate(-40%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 110%
                      - left: 40%
                      - width: calc(75% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_parents'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_parents'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - operator: '>'
                    value: '0'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                custom_fields:
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.presence_salon
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'True'
                              icon: mdi:run-fast
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'False'
                              icon: mdi:exit-run
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.detecteur_porte_garage
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              icon: mdi:window-open
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'True'
                              icon: mdi:window-closed
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                      columns: 1
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_parents
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: sensor.temperature_enfants
                name: Enfants
                icon: mdi:bed
                show_icon: true
                show_name: true
                show_state: true
                show_label: true
                label: >
                  [[[ return (states['sensor.humidite_enfants'].state ) + "%";
                  ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: |
                        [[[
                          if (states['sensor.temperature_enfants'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_enfants'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 150%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.humidite_enfants'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.humidite_enfants'].state > 70)
                            return 'dodgerblue';
                          return 'darkgrey';
                        ]]]
                    - top: 57%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 110%
                    - position: absolute
                  card:
                    - height: 125px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    ic:
                      - position: absolute
                      - top: 40%
                      - left: 80%
                      - width: calc(60% + 1px)
                      - transform: translate(-40%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 110%
                      - left: 40%
                      - width: calc(75% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - operator: '>'
                    value: '0'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                custom_fields:
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.presence_salon
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              icon: mdi:run-fast
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'False'
                              icon: mdi:exit-run
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.detecteur_porte_garage
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'False'
                              icon: mdi:windows-open
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'True'
                              icon: mdi:window-closed
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                      columns: 1
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_enfants
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.temperature_parents
                name: WC
                icon: mdi:toilet
                show_icon: true
                show_name: true
                show_state: true
                show_label: true
                label: >
                  [[[ return (states['sensor.humidite_parents'].state ) + "%";
                  ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: |
                        [[[
                          if (states['sensor.temperature_parents'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_parents'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 150%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.humidite_parents'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.humidite_parents'].state > 70)
                            return 'dodgerblue';
                          return 'darkgrey';
                        ]]]
                    - top: 57%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 110%
                    - position: absolute
                  card:
                    - height: 125px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    ic:
                      - position: absolute
                      - top: 40%
                      - left: 80%
                      - width: calc(60% + 1px)
                      - transform: translate(-40%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.temperature_parents'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.temperature_parents'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - operator: '>'
                    value: '0'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                custom_fields:
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.presence_salon
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'True'
                              icon: mdi:run-fast
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'False'
                              icon: mdi:exit-run
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.detecteur_porte_garage
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              icon: mdi:window-open
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'True'
                              icon: mdi:window-closed
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                      columns: 1
                      square: false
              - type: custom:button-card
                entity: sensor.temperature_enfants
                name: Garage
                icon: mdi:garage
                show_icon: true
                show_name: true
                show_state: true
                show_label: true
                label: >
                  [[[ return (states['sensor.humidite_enfants'].state ) + "%";
                  ]]]
                styles:
                  img_cell:
                    - background-color: rgba(70,70,70,0.5)
                    - border-radius: 50%
                    - place-self: start
                    - width: 40px
                    - height: 40px
                    - margin-top: 10px
                    - margin-left: 15px
                  icon:
                    - place-self: start
                    - width: 90%
                  name:
                    - top: 19%
                    - left: 36%
                    - font-size: 110%
                    - font-weight: bold
                    - position: absolute
                  state:
                    - color: |
                        [[[
                          if (states['sensor.temperature_enfants'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.temperature_enfants'].state > 24)
                            return 'red';
                          return 'darkgrey';
                        ]]]
                    - top: 37%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 150%
                    - position: absolute
                  label:
                    - color: |
                        [[[
                          if (states['sensor.humidite_enfants'].state < 19)
                            return 'dodgerblue';
                          if (states['sensor.humidite_enfants'].state > 70)
                            return 'dodgerblue';
                          return 'darkgrey';
                        ]]]
                    - top: 57%
                    - left: 36%
                    - font-weight: bold
                    - font-size: 110%
                    - position: absolute
                  card:
                    - height: 125px
                    - padding: 10px
                    - font-size: 100%
                    - background-color: '#ffffff'
                    - border-radius: 20px
                    - animation: ball-scale 0.2s
                  custom_fields:
                    ic:
                      - position: absolute
                      - top: 40%
                      - left: 80%
                      - width: calc(60% + 1px)
                      - transform: translate(-40%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                    graph:
                      - position: absolute
                      - top: 110%
                      - left: 40%
                      - width: calc(75% + 15px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 12
                      - '--paper-card-background-color': rgba(0, 0, 0, 0)
                      - '--ha-card-background': rgba(0, 0, 0, 0)"
                      - '--ha-card-box-shadow': none
                      - pointer-events: none
                extra_styles: |
                  @keyframes ball-scale {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                  @keyframes ball-scale2 {
                    from {
                      transform: scale(1);
                    }
                    to {
                      transform: scale(0.90);
                    }
                  }
                state:
                  - value: 'on'
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--button-card-light-color)
                      icon:
                        - color: var(--icon_on)
                        - transition: 2s ease
                      name:
                        - color: var(--text_on)
                      label:
                        - color: |
                            [[[
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state < 19)
                                return 'dodgerblue';
                              if (states['sensor.netatmo_maison_piece_de_vie_temperature'].state > 24)
                                return 'red';
                             return 'darkgrey';
                            ]]]
                  - operator: '>'
                    value: '0'
                    color: grey
                    styles:
                      card:
                        - animation: ball-scale 0.2s
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                        - transition: 2s ease
                      name:
                        - color: grey
                custom_fields:
                  ic:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.presence_salon
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'on'
                              icon: mdi:run-fast
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'False'
                              icon: mdi:exit-run
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                        - type: custom:button-card
                          entity: sensor.detecteur_porte_garage
                          show_name: false
                          styles:
                            icon:
                              - width: 20%
                            card:
                              - background: transparent
                              - 'border-color:': transparent
                          state:
                            - value: 'False'
                              icon: mdi:windows-open
                              styles:
                                icon:
                                  - color: firebrick
                            - value: 'True'
                              icon: mdi:window-closed
                              styles:
                                icon:
                                  - color: green
                          tap_action:
                            action: more-info
                      columns: 1
                      square: false
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: var(--graph_line)
                          entity: sensor.temperature_enfants
                      height: 300
                      line_width: 5
                      lower_bound: 0
                      points_per_hour: 1
                      hours_to_show: 24
                      show:
                        fill: false
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
      - type: vertical-stack
        cards:
          - type: custom:button-card
            template:
              - bouton_titre
            style:
              .: |
                ha-card {
                    --ha-card-background: none !important;
                    box-shadow: none !important;
                    font-family: Avenir
            name: |
              [[[ return "Surveillance"]]]
            label: |
              [[[ return states['sensor.surveillance'].state ]]]
          - type: horizontal-stack
            cards:
              - entity: input_boolean.alarme_activation
                template: scene
                type: custom:button-card
                name: Alarme
                state:
                  - label: activée
                    id: vert_off
                    value: 'on'
                  - label: désactivée
                    id: rouge_on
                    value: 'off'
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.detecteur_porte_garage
                template:
                  - icon_info_bg
                  - ouverture
                name: Porte d'entrée
                state:
                  - icon: mdi:door-open
                    label: ouverte
                    id: rouge_on
                    value: 'False'
                  - icon: mdi:door-closed
                    label: fermée
                    id: vert_off
                    value: 'True'
              - type: custom:button-card
                entity: sensor.presence_salon
                template:
                  - icon_info_bg
                  - ouverture
                name: Pallier
                state:
                  - label: Mouvement
                    id: rouge_on
                    value: 'True'
                  - label: RAS
                    id: vert_off
                    value: 'False'
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.presence_salon
                template:
                  - icon_info_bg
                  - ouverture
                name: Piece de vie
                state:
                  - label: Mouvement
                    id: rouge_on
                    value: 'True'
                  - label: RAS
                    id: vert_off
                    value: 'False'
              - type: custom:button-card
                entity: sensor.detecteur_porte_garage
                template:
                  - icon_info_bg
                  - ouverture
                name: Garage
                state:
                  - icon: mdi:garage
                    label: ouverte
                    id: rouge_on
                    value: 'False'
                  - icon: mdi:garage
                    label: fermée
                    id: vert_off
                    value: 'True'
          - type: custom:button-card
            template:
              - bouton_titre
            style:
              .: |
                ha-card {
                    --ha-card-background: none !important;
                    box-shadow: none !important;
                    font-family: Avenir
            name: |
              [[[ return "Système"]]]
            label: |
              [[[ return states['sensor.systeme'].state ]]]
          - type: horizontal-stack
            cards:
              - type: entities
                entities:
                  - entity: automation.securite_02_alarme_paradis
                    name: alarme
                  - entity: automation.reboot_moissac
                    name: zigbee2mqtt
                  - entity: automation.reboot_ok_moissac
                    name: reboot OK
                show_header_toggle: false
                state_color: true
              - type: custom:button-card
                entity: sensor.rpi_cpu_temp
                name: RPI 3 B+
                icon: mdi:raspberry-pi
                template:
                  - bouton_systeme
                styles:
                  img_cell:
                    - background-color: |
                        [[[
                          if (entity.state < 50) return 'var(--pastille_off)';
                          if (entity.state >= 50 && entity.state < 60) return 'tomato';
                          else return 'red';
                        ]]]
                  icon:
                    - animation: |
                        [[[
                          if (entity.state > "50" )
                            return "blink 1s ease infinite";
                         return "";
                        ]]]
                  custom_fields:
                    circle:
                      - stroke: |
                          [[[
                            if (entity.state <= 49)
                              return 'grey';
                            if (entity.state > 49)
                              return 'tomato';
                            return '';
                          ]]]
                    info1:
                      - '--text-color-sensor': >-
                          [[[ if (states["sensor.rpi_cpu_load"].state > 50)
                          return "red";  else return "black"; ]]]
                    info2:
                      - '--text-color-sensor': >-
                          [[[ if (states["sensor.rpi_memory"].state > 60)
                          return  "red";  else return "black"; ]]]
                    info3:
                      - '--text-color-sensor': >-
                          [[[ if (states["sensor.rpi_diskusage"].state > 70)
                          return "red";  else return "black"; ]]]
                    info4:
                      - '--text-color-sensor': >-
                          [[[ if (states["sensor.rpi_uptime"].state > 7) 
                          return  "red";   if (states["sensor.rpi_uptime"].state
                          == "unavailable")  return  "transparent"; else  return
                          "black";  ]]]
                    info5:
                      - '--text-color-sensor': >-
                          [[[ if (states["sensor.disponibilite"].state ==
                          "online")  return  "green";   if
                          (states["sensor.disponibilite"].state ==
                          "unavailable")  return  "transparent"; else  return
                          "red";  ]]]
                custom_fields:
                  circle: |
                    [[[ if (entity.state != '0' ) {
                       ;
                       const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                       return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="grey" stroke-width="1.5" fill="none" style="
                       transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - entity.state / 90 * circumference};" />
                       <text x="50%" y="54%" fill="lightgrey" font-size="15" text-anchor="middle" alignment-baseline="middle">${entity.state}°<tspan font-size="10"></tspan></text></svg>`; } ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:server"
                        style="width: 12px; height: 12px; color: grey;">
                        </ha-icon><span> CPU : <span style="color: var(--text-color-sensor);">${states['sensor.rpi_cpu_load'].state}%</span></span>`
                    ]]]
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:memory"
                        style="width: 12px; height: 12px; color: grey;">
                        </ha-icon><span> RAM : <span style="color: var(--text-color-sensor);">${states['sensor.rpi_memory'].state}%</span></span>`
                    ]]]
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:harddisk"
                        style="width: 12px; height: 12px; color: grey;">
                        </ha-icon><span> SSD : <span style="color: var(--text-color-sensor);">${states['sensor.rpi_diskusage'].state}%</span></span>`
                    ]]]
                  info4: |
                    [[[
                      return `<ha-icon
                        icon="mdi:clock"
                        style="width: 12px; height: 12px; color: grey;">
                        </ha-icon><span> Uptime: <span style="color: var(--text-color-sensor);">${states['sensor.rpi_uptime'].state} jour(s)</span></span>`
                    ]]]
                  info5: |
                    [[[
                      return `<ha-icon
                        icon="mdi:clock"
                        style="width: 12px; height: 12px; color: grey;">
                        </ha-icon><span> MQTT: <span style="color: var(--text-color-sensor);">${states['sensor.disponibilite'].state}</span></span>`
                    ]]]

