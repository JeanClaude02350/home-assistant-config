type: custom:button-card
entity: sensor.octopi_cpu_temperature
name: OCTOPRINT
icon: mdi:raspberry-pi
show_icon: true
show_name: true
show_state: false
show_label: true
styles:
  card:
    - height: 175px
    - text-shadow: 0px 0px 0px white
    - background-color: '#FFFFFF'
    - padding-left: 10px
    - border-radius: 20px
    - padding: 5%
    - font-size: 15px
    - transition: none
  icon:
    - color: black
    - top: 1%
    - left: 10%
    - width: 75%
    - animation: |
        [[[
          if (entity.state > "65" )
            return "blink 1s ease infinite";
          return "";
        ]]]
  img_cell:
    - border-radius: 50%
    - place-self: start
    - width: 37px
    - height: 37px
    - margin-left: 2%
    - margin-top: 0%
    - background-color: |
        [[[
          if (entity.state < 65) return '#64d581';
          if (entity.state >= 65 && entity.state < 85) return '#f7c754';
          else return 'red';
        ]]]
  name:
    - color: black
    - top: 33%
    - left: 6%
    - font-size: 100%
    - font-weight: bold
    - position: absolute
  custom_fields:
    circle:
      - top: 17%
      - left: 66.2%
      - width: 27%
      - position: absolute
      - letter-spacing: 0.03vw
      - stroke: |
          [[[
            if (entity.state <= 65)
              return 'green';
            if (entity.state > 65)
              return 'tomato';
            return '';
          ]]]
    info1:
      - font-size: 12px
      - color: black
      - top: 57%
      - left: 3.2%
      - position: absolute
      - width: null
      - '--text-color-sensor': >-
          [[[ if (states["sensor.octopi_cpu_usage"].state > 50) return "red"; 
          else return "black"; ]]]
    info2:
      - font-size: 12px
      - color: black
      - top: 69%
      - left: 3.2%
      - width: null
      - position: absolute
      - '--text-color-sensor': >-
          [[[ if (states["sensor.octopi_memory_usage"].state > 60) return 
          "red";  else return "black"; ]]]
    info3:
      - font-size: 12px
      - color: black
      - top: 81%
      - left: 3.2%
      - width: null
      - position: absolute
      - '--text-color-sensor': >-
          [[[ if (states["sensor.octopi_disk_usage"].state > 70) return "red"; 
          else return "black"; ]]]
    info4:
      - font-size: 12px
      - color: black
      - top: 69%
      - left: 50.2%
      - width: null
      - position: absolute
      - '--text-color-sensor': >-
          [[[ if (states["sensor.octopi_uptime"].state > 7)  return  "red";   if
          (states["sensor.octopi_uptime"].state == "unavailable")  return 
          "transparent"; else  return "black";  ]]]
    info5:
      - font-size: 12px
      - color: black
      - top: 81%
      - left: 50.2%
      - width: null
      - position: absolute
      - '--text-color-sensor': >-
          [[[ if (states["sensor.disponibilite"].state == "online")  return 
          "green";   if (states["sensor.disponibilite"].state == "unavailable") 
          return  "transparent"; else  return "red";  ]]]
custom_fields:
  circle: |
    [[[ if (entity.state != '0' ) {
       ;
       const radius = 20.5; const circumference = radius * 2 * Math.PI; 
       return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="grey" stroke-width="1.5" fill="none" style="
       transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - entity.state / 90 * circumference};" />
       <text x="50%" y="54%" fill="lightgrey" font-size="15" text-anchor="middle" alignment-baseline="middle">${entity.state}Â°<tspan font-size="10"></tspan></text></svg>`; } ]]]
  info1: |
    [[[
      return `<ha-icon
        icon="mdi:server"
        style="width: 12px; height: 12px; color: grey;">
        </ha-icon><span> CPU : <span style="color: var(--text-color-sensor);">${states['sensor.octopi_cpu_usage'].state}%</span></span>`
    ]]]
  info2: |
    [[[
      return `<ha-icon
        icon="mdi:memory"
        style="width: 12px; height: 12px; color: grey;">
        </ha-icon><span> RAM : <span style="color: var(--text-color-sensor);">${states['sensor.octopi_memory_usage'].state}%</span></span>`
    ]]]
  info3: |
    [[[
      return `<ha-icon
        icon="mdi:harddisk"
        style="width: 12px; height: 12px; color: grey;">
        </ha-icon><span> SSD : <span style="color: var(--text-color-sensor);">${states['sensor.octopi_disk_usage'].state}%</span></span>`
    ]]]
  info4: |
    [[[
      return `<ha-icon
        icon="mdi:clock"
        style="width: 12px; height: 12px; color: grey;">
        </ha-icon><span> Uptime: <span style="color: var(--text-color-sensor);">${states['sensor.octopi_uptime'].state} jour(s)</span></span>`
    ]]]
  info5: |
    [[[
      return `<ha-icon
        icon="mdi:clock"
        style="width: 12px; height: 12px; color: grey;">
        </ha-icon><span> MQTT: <span style="color: var(--text-color-sensor);">${states['sensor.disponibilite'].state}</span></span>`
    ]]]

